name: Test and build
on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]
env:
  image: node:16.16.0-alpine
  IMAGE_NAME: core/documentation-site
jobs:
  test-build:
    name: Test and Build
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        uses: DerYeger/yarn-setup-action@master
        with:
          node-version: 16.18
      - name: Check lint
        run: yarn lint
      - name: Check spell
        run: yarn run spellcheck
      - name: Check content
        run: yarn run check-content
      - name: Build site
        if: ${{ startsWith(github.ref, 'refs/tags/') || github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
        env:
          NODE_ENV: "production"
          INLINE_RUNTIME_CHUNK: "false"
        run: yarn build

  build-latest:
    needs: test-build
    name: Build docker image
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
    runs-on: ubuntu-latest 
    steps:
      - name: Checkout code
        uses: actions/checkout@v3    
      - name: Configure docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/mia-platform/documentation
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          labels: |
            org.opencontainers.image.documentation=https://mia-platform.eu
            org.opencontainers.image.vendor=Mia-Platform
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Prepare build cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}

  # deploy-next:
  #   name: Deploy next
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: trigger Job
  #     uses: appleboy/gitlab-ci-action@master
  #     with:
  #       url: "http://example.com"
  #       token: ${{ secrets.TOKEN }}
  #       project_id: 100
