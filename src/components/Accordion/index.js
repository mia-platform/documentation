import React, {useState} from 'react';
import styles from './styles.module.css';
import FeatureItem from "./FeatureItem";
import FeatureList from "./FeatureList";

const classNames = (...classes) => classes.filter(Boolean).join(' ');

const circularBg = <rect fill="#F2F2F2" height="32" rx="16" width="32" x="0" y="0"/>;
const ConsoleIcon = () => (
    <svg viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
        {circularBg}
        <g transform="translate(-40 -2980)">
            <path
                d="M65.75 2996.94H65V2987.94C65 2987.34 64.7629 2986.77 64.341 2986.35C63.919 2985.93 63.3467 2985.69 62.75 2985.69H49.25C48.6533 2985.69 48.081 2985.93 47.659 2986.35C47.2371 2986.77 47 2987.34 47 2987.94V2996.94H46.25C46.0511 2996.94 45.8603 2997.02 45.7197 2997.16C45.579 2997.3 45.5 2997.49 45.5 2997.69V2999.19C45.5 2999.79 45.7371 3000.36 46.159 3000.78C46.581 3001.2 47.1533 3001.44 47.75 3001.44H64.25C64.8467 3001.44 65.419 3001.2 65.841 3000.78C66.2629 3000.36 66.5 2999.79 66.5 2999.19V2997.69C66.5 2997.49 66.421 2997.3 66.2803 2997.16C66.1397 2997.02 65.9489 2996.94 65.75 2996.94ZM48.5 2987.94C48.5 2987.74 48.579 2987.55 48.7197 2987.41C48.8603 2987.27 49.0511 2987.19 49.25 2987.19H62.75C62.9489 2987.19 63.1397 2987.27 63.2803 2987.41C63.421 2987.55 63.5 2987.74 63.5 2987.94V2996.94H48.5V2987.94ZM65 2999.19C65 2999.39 64.921 2999.58 64.7803 2999.72C64.6397 2999.86 64.4489 2999.94 64.25 2999.94H47.75C47.5511 2999.94 47.3603 2999.86 47.2197 2999.72C47.079 2999.58 47 2999.39 47 2999.19V2998.44H65V2999.19ZM58.25 2989.44C58.25 2989.64 58.171 2989.83 58.0303 2989.97C57.8897 2990.11 57.6989 2990.19 57.5 2990.19H54.5C54.3011 2990.19 54.1103 2990.11 53.9697 2989.97C53.829 2989.83 53.75 2989.64 53.75 2989.44C53.75 2989.24 53.829 2989.05 53.9697 2988.91C54.1103 2988.77 54.3011 2988.69 54.5 2988.69H57.5C57.6989 2988.69 57.8897 2988.77 58.0303 2988.91C58.171 2989.05 58.25 2989.24 58.25 2989.44Z"
                fill="currentColor"/>
        </g>
    </svg>
);
const FastDataIcon = () => (
    <svg viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
        {circularBg}
        <g transform="translate(-40 -3558)">
            <path
                d="M56 3563.44C50.9534 3563.44 47 3565.75 47 3568.69V3577.69C47 3580.63 50.9534 3582.94 56 3582.94C61.0466 3582.94 65 3580.63 65 3577.69V3568.69C65 3565.75 61.0466 3563.44 56 3563.44ZM63.5 3573.19C63.5 3574.09 62.7612 3575.01 61.4741 3575.71C60.0247 3576.5 58.0803 3576.94 56 3576.94C53.9197 3576.94 51.9753 3576.5 50.5259 3575.71C49.2387 3575.01 48.5 3574.09 48.5 3573.19V3571.63C50.0994 3573.04 52.8341 3573.94 56 3573.94C59.1659 3573.94 61.9006 3573.03 63.5 3571.63V3573.19ZM50.5259 3566.17C51.9753 3565.38 53.9197 3564.94 56 3564.94C58.0803 3564.94 60.0247 3565.38 61.4741 3566.17C62.7612 3566.87 63.5 3567.79 63.5 3568.69C63.5 3569.59 62.7612 3570.51 61.4741 3571.21C60.0247 3572 58.0803 3572.44 56 3572.44C53.9197 3572.44 51.9753 3572 50.5259 3571.21C49.2387 3570.51 48.5 3569.59 48.5 3568.69C48.5 3567.79 49.2387 3566.87 50.5259 3566.17ZM61.4741 3580.21C60.0247 3581 58.0803 3581.44 56 3581.44C53.9197 3581.44 51.9753 3581 50.5259 3580.21C49.2387 3579.51 48.5 3578.59 48.5 3577.69V3576.13C50.0994 3577.54 52.8341 3578.44 56 3578.44C59.1659 3578.44 61.9006 3577.53 63.5 3576.13V3577.69C63.5 3578.59 62.7612 3579.51 61.4741 3580.21Z"
                fill="currentColor"/>
        </g>
    </svg>
);
const DataCatalogIcon = () => (
    <svg viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
        {circularBg}
        <g transform="translate(-40 -3872)">
            <path
                d="M64.25 3880.94H47.75C47.3522 3880.94 46.9706 3881.1 46.6893 3881.38C46.408 3881.66 46.25 3882.04 46.25 3882.44V3895.94C46.25 3896.34 46.408 3896.72 46.6893 3897C46.9706 3897.28 47.3522 3897.44 47.75 3897.44H64.25C64.6478 3897.44 65.0294 3897.28 65.3107 3897C65.592 3896.72 65.75 3896.34 65.75 3895.94V3882.44C65.75 3882.04 65.592 3881.66 65.3107 3881.38C65.0294 3881.1 64.6478 3880.94 64.25 3880.94ZM64.25 3882.44V3886.19H47.75V3882.44H64.25ZM47.75 3887.69H53V3895.94H47.75V3887.69ZM64.25 3895.94H54.5V3887.69H64.25V3895.94Z"
                fill="currentColor"/>
        </g>
    </svg>
);
const MicrofrontendComposerIcon = () => (
    <svg viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
        {circularBg}
        <g transform="translate(-40 -3872)">
            <path
                d="M64.25 3880.94H47.75C47.3522 3880.94 46.9706 3881.1 46.6893 3881.38C46.408 3881.66 46.25 3882.04 46.25 3882.44V3895.94C46.25 3896.34 46.408 3896.72 46.6893 3897C46.9706 3897.28 47.3522 3897.44 47.75 3897.44H64.25C64.6478 3897.44 65.0294 3897.28 65.3107 3897C65.592 3896.72 65.75 3896.34 65.75 3895.94V3882.44C65.75 3882.04 65.592 3881.66 65.3107 3881.38C65.0294 3881.1 64.6478 3880.94 64.25 3880.94ZM64.25 3882.44V3886.19H47.75V3882.44H64.25ZM47.75 3887.69H53V3895.94H47.75V3887.69ZM64.25 3895.94H54.5V3887.69H64.25V3895.94Z"
                fill="currentColor"/>
        </g>
    </svg>
);
const MarketplaceIcon = () => (
    <svg viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
        {circularBg}
        <g transform="translate(-40 -4698)">
            <path clipRule="evenodd"
                  d="M45 4704.92C45 4704.64 45.2239 4704.42 45.5 4704.42H47.3731C47.7462 4704.42 48.1266 4704.53 48.4103 4704.74C48.5341 4704.84 48.6556 4704.95 48.754 4705.11C48.8499 4705.27 48.9062 4705.45 48.9443 4705.64C48.9865 4705.85 49.6937 4709.79 51.0635 4717.43H63.3285L65.1216 4708.07C65.1736 4707.8 65.4356 4707.63 65.7068 4707.68C65.978 4707.73 66.1557 4707.99 66.1037 4708.26L64.2328 4718.02C64.1876 4718.26 63.9816 4718.43 63.7417 4718.43H50.6451C50.403 4718.43 50.1957 4718.25 50.1529 4718.02C48.7328 4710.09 48.0039 4706.04 47.9635 4705.83C47.939 4705.71 47.9141 4705.66 47.8985 4705.63C47.8853 4705.61 47.8651 4705.58 47.8056 4705.54C47.7226 4705.48 47.5639 4705.42 47.3731 4705.42H45.5C45.2239 4705.42 45 4705.19 45 4704.92ZM51.6775 4721.03C50.9251 4721.03 50.3099 4721.65 50.3099 4722.41C50.3099 4723.17 50.9251 4723.79 51.6775 4723.79C52.4298 4723.79 53.0451 4723.17 53.0451 4722.41C53.0451 4721.65 52.4298 4721.03 51.6775 4721.03ZM49.3099 4722.41C49.3099 4721.1 50.3669 4720.03 51.6775 4720.03C52.988 4720.03 54.0451 4721.1 54.0451 4722.41C54.0451 4723.72 52.988 4724.79 51.6775 4724.79C50.3669 4724.79 49.3099 4723.72 49.3099 4722.41ZM62.8831 4721.03C62.1308 4721.03 61.5155 4721.65 61.5155 4722.41C61.5155 4723.17 62.1308 4723.79 62.8831 4723.79C63.6354 4723.79 64.2507 4723.17 64.2507 4722.41C64.2507 4721.65 63.6354 4721.03 62.8831 4721.03ZM60.5155 4722.41C60.5155 4721.1 61.5725 4720.03 62.8831 4720.03C64.1937 4720.03 65.2507 4721.1 65.2507 4722.41C65.2507 4723.72 64.1937 4724.79 62.8831 4724.79C61.5725 4724.79 60.5155 4723.72 60.5155 4722.41Z"
                  fill="#636363" fillRule="evenodd"/>
            <path
                d="M52.4828 4703.85L51.4699 4704.73L51.726 4706.05L52.995 4706.49L54.008 4705.61L53.7519 4704.29L52.4828 4703.85ZM54.6234 4703.53L52.2625 4702.72L50.3781 4704.36L50.8545 4706.81L53.2154 4707.62L55.0998 4705.98L54.6234 4703.53Z"
                fill="#E98E56"/>
            <path
                d="M55.9472 4707.8L54.9343 4708.68L55.1904 4710L56.4594 4710.43L57.4723 4709.55L57.2163 4708.23L55.9472 4707.8ZM58.0877 4707.48L55.7269 4706.66L53.8425 4708.3L54.3189 4710.75L56.6797 4711.57L58.5641 4709.93L58.0877 4707.48Z"
                fill="#E06565"/>
            <path
                d="M61.1855 4706.78L60.1725 4707.66L60.4286 4708.98L61.6977 4709.41L62.7106 4708.53L62.4545 4707.22L61.1855 4706.78ZM63.326 4706.46L60.9652 4705.65L59.0807 4707.28L59.5572 4709.74L61.918 4710.55L63.8024 4708.91L63.326 4706.46Z"
                fill="#614F8C"/>
            <path
                d="M59.4448 4711.81L58.4318 4712.69L58.6879 4714.01L59.957 4714.44L60.9699 4713.56L60.7138 4712.24L59.4448 4711.81ZM61.5853 4711.49L59.2244 4710.67L57.34 4712.31L57.8164 4714.76L60.1773 4715.58L62.0617 4713.94L61.5853 4711.49Z"
                fill="#50B8DA"/>
            <path
                d="M54.2065 4712.83L53.1935 4713.71L53.4496 4715.02L54.7187 4715.46L55.7316 4714.58L55.4755 4713.26L54.2065 4712.83ZM56.347 4712.5L53.9862 4711.69L52.1017 4713.33L52.5782 4715.78L54.939 4716.59L56.8234 4714.96L56.347 4712.5Z"
                fill="#54A97D"/>
        </g>
    </svg>
);
const DefaultIcon = () => (
    <svg viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
        {circularBg}
        <g transform="translate(4 4)">
            <path d="M12 2.25a.75.75 0 0 1 .75.75v18a.75.75 0 0 1-1.5 0v-18A.75.75 0 0 1 12 2.25Z" fill="currentColor"/>
        </g>
    </svg>
);
const ChevronDownIcon = () => (
    <svg fill="none" height="8" viewBox="0 0 12 8" width="12" xmlns="http://www.w3.org/2000/svg">
        <path d="M1.41 0.589996L6 5.17L10.59 0.589996L12 2L6 8L0 2L1.41 0.589996Z" fill="currentColor"/>
    </svg>
);
const ChevronRightIcon = () => (
    <svg fill="none" height="12" viewBox="0 0 8 12" width="8" xmlns="http://www.w3.org/2000/svg">
        <path d="M0.589996 10.59L5.17 6L0.589996 1.41L2 0L8 6L2 12L0.589996 10.59Z" fill="currentColor"/>
    </svg>
);
const MainIcon = ({iconId}) => {
    const IconComponent = iconMap[iconId] || <DefaultIcon/>;
    return <span className={styles.mainIcon}>{IconComponent}</span>;
};
const NewFeatureIcon = () => (
    <svg viewBox="0 0 18 18" xmlns="http://www.w3.org/2000/svg">
        <g transform="translate(-717 -39)">
            <path
                d="M722.968 43.2894C722.851 43.1722 722.706 43.0866 722.546 43.0403C722.387 42.994 722.219 42.9886 722.057 43.0245C721.895 43.0604 721.745 43.1366 721.62 43.2459C721.495 43.3552 721.4 43.4942 721.343 43.65L718.063 52.6737C718.009 52.8226 717.991 52.9821 718.012 53.139C718.032 53.296 718.09 53.4457 718.181 53.5756C718.271 53.7055 718.391 53.8119 718.531 53.8857C718.671 53.9596 718.827 53.9988 718.985 54C719.102 53.9992 719.217 53.9781 719.326 53.9375L728.349 50.6562C728.505 50.5995 728.644 50.5043 728.754 50.3796C728.863 50.2549 728.939 50.1047 728.975 49.9427C729.011 49.7808 729.006 49.6124 728.96 49.4531C728.913 49.2938 728.828 49.1487 728.711 49.0312L722.968 43.2894ZM722.448 51.74L720.26 49.5525L721.083 47.2894L724.711 50.9175L722.448 51.74ZM719.01 52.99L719.885 50.5894L721.413 52.1175L719.01 52.99ZM725.75 50.54L721.46 46.25L722.273 44.0081L727.987 49.7225L725.75 50.54ZM726 44.5C726.009 44.162 726.091 43.8299 726.24 43.5262C726.571 42.8644 727.196 42.5 728 42.5C728.419 42.5 728.688 42.3569 728.853 42.0494C728.94 41.8773 728.99 41.6889 729 41.4963C729.001 41.3636 729.054 41.2367 729.148 41.1432C729.242 41.0498 729.369 40.9976 729.502 40.9981C729.635 40.9986 729.762 41.0518 729.855 41.1459C729.948 41.24 730.001 41.3674 730 41.5C730 42.3038 729.468 43.5 728 43.5C727.581 43.5 727.313 43.6431 727.147 43.9506C727.06 44.1227 727.01 44.3111 727 44.5037C727 44.5694 726.987 44.6344 726.961 44.6949C726.936 44.7555 726.899 44.8105 726.852 44.8568C726.806 44.903 726.75 44.9396 726.69 44.9645C726.629 44.9894 726.564 45.0021 726.498 45.0019C726.433 45.0016 726.368 44.9885 726.307 44.9631C726.246 44.9377 726.191 44.9007 726.145 44.8541C726.099 44.8075 726.062 44.7522 726.037 44.6915C726.012 44.6307 726 44.5657 726 44.5ZM724.5 42.5V41C724.5 40.8674 724.553 40.7402 724.646 40.6464C724.74 40.5527 724.867 40.5 725 40.5C725.133 40.5 725.26 40.5527 725.354 40.6464C725.447 40.7402 725.5 40.8674 725.5 41V42.5C725.5 42.6326 725.447 42.7598 725.354 42.8536C725.26 42.9473 725.133 43 725 43C724.867 43 724.74 42.9473 724.646 42.8536C724.553 42.7598 724.5 42.6326 724.5 42.5ZM730.854 47.6462C730.9 47.6927 730.937 47.7478 730.962 47.8085C730.987 47.8692 731 47.9342 731 47.9999C731 48.0656 730.987 48.1306 730.962 48.1913C730.937 48.2519 730.9 48.307 730.853 48.3534C730.807 48.3999 730.752 48.4367 730.691 48.4618C730.631 48.4869 730.565 48.4998 730.5 48.4997C730.434 48.4997 730.369 48.4868 730.308 48.4616C730.248 48.4364 730.193 48.3996 730.146 48.3531L729.146 47.3531C729.052 47.2593 729 47.1321 729 46.9994C729 46.8667 729.052 46.7394 729.146 46.6456C729.24 46.5518 729.367 46.4991 729.5 46.4991C729.633 46.4991 729.76 46.5518 729.854 46.6456L730.854 47.6462ZM731.158 44.9744L729.658 45.4744C729.532 45.5163 729.395 45.5066 729.276 45.4472C729.158 45.3879 729.068 45.2839 729.026 45.1581C728.984 45.0323 728.993 44.895 729.053 44.7764C729.112 44.6578 729.216 44.5676 729.342 44.5256L730.842 44.0256C730.968 43.9837 731.105 43.9934 731.224 44.0528C731.342 44.1121 731.432 44.2161 731.474 44.3419C731.516 44.4677 731.507 44.605 731.447 44.7236C731.388 44.8422 731.284 44.9324 731.158 44.9744Z"
                fill="currentColor"/>
        </g>
    </svg>
);
const ImprovementIcon = () => (
    <svg viewBox="0 0 14 14" xmlns="http://www.w3.org/2000/svg">
        <g transform="translate(-771 -41)">
            <path
                d="M778 41.5C776.714 41.5 775.458 41.8812 774.389 42.5954C773.32 43.3097 772.487 44.3248 771.995 45.5126C771.503 46.7003 771.374 48.0072 771.625 49.2681C771.876 50.529 772.495 51.6872 773.404 52.5962C774.313 53.5052 775.471 54.1243 776.732 54.3751C777.993 54.6259 779.3 54.4972 780.487 54.0052C781.675 53.5132 782.69 52.6801 783.405 51.6112C784.119 50.5423 784.5 49.2856 784.5 48C784.498 46.2767 783.813 44.6244 782.594 43.4058C781.376 42.1872 779.723 41.5018 778 41.5ZM778 53.5C776.912 53.5 775.849 53.1774 774.944 52.5731C774.04 51.9687 773.335 51.1098 772.919 50.1048C772.502 49.0998 772.393 47.9939 772.606 46.927C772.818 45.8601 773.342 44.8801 774.111 44.1109C774.88 43.3417 775.86 42.8179 776.927 42.6057C777.994 42.3935 779.1 42.5024 780.105 42.9187C781.11 43.3349 781.969 44.0399 782.573 44.9444C783.177 45.8488 783.5 46.9122 783.5 48C783.498 49.4582 782.918 50.8562 781.887 51.8873C780.856 52.9184 779.458 53.4983 778 53.5ZM780.354 47.1462C780.4 47.1927 780.437 47.2479 780.462 47.3086C780.487 47.3692 780.5 47.4343 780.5 47.5C780.5 47.5657 780.487 47.6308 780.462 47.6914C780.437 47.7521 780.4 47.8073 780.354 47.8538C780.307 47.9002 780.252 47.9371 780.191 47.9622C780.131 47.9873 780.066 48.0003 780 48.0003C779.934 48.0003 779.869 47.9873 779.809 47.9622C779.748 47.9371 779.693 47.9002 779.646 47.8538L778.5 46.7069V50.5C778.5 50.6326 778.447 50.7598 778.354 50.8536C778.26 50.9473 778.133 51 778 51C777.867 51 777.74 50.9473 777.646 50.8536C777.553 50.7598 777.5 50.6326 777.5 50.5V46.7069L776.354 47.8538C776.26 47.9476 776.133 48.0003 776 48.0003C775.867 48.0003 775.74 47.9476 775.646 47.8538C775.552 47.7599 775.5 47.6327 775.5 47.5C775.5 47.3673 775.552 47.2401 775.646 47.1462L777.646 45.1462C777.693 45.0998 777.748 45.0629 777.809 45.0377C777.869 45.0126 777.934 44.9996 778 44.9996C778.066 44.9996 778.131 45.0126 778.191 45.0377C778.252 45.0629 778.307 45.0998 778.354 45.1462L780.354 47.1462Z"
                fill="currentColor"/>
        </g>
    </svg>
);
const BugFixIcon = () => (
    <svg viewBox="0 0 16 12" xmlns="http://www.w3.org/2000/svg">
        <g transform="translate(-821 -42)">
            <path
                d="M830 45.75C830 45.6017 830.044 45.4567 830.126 45.3333C830.209 45.21 830.326 45.1139 830.463 45.0571C830.6 45.0003 830.751 44.9855 830.896 45.0144C831.042 45.0433 831.175 45.1148 831.28 45.2197C831.385 45.3246 831.457 45.4582 831.486 45.6037C831.515 45.7492 831.5 45.9 831.443 46.037C831.386 46.1741 831.29 46.2912 831.167 46.3736C831.043 46.456 830.898 46.5 830.75 46.5C830.551 46.5 830.36 46.421 830.22 46.2803C830.079 46.1397 830 45.9489 830 45.75ZM827.25 45C827.102 45 826.957 45.044 826.833 45.1264C826.71 45.2088 826.614 45.3259 826.557 45.463C826.5 45.6 826.485 45.7508 826.514 45.8963C826.543 46.0418 826.615 46.1754 826.72 46.2803C826.825 46.3852 826.958 46.4566 827.104 46.4856C827.249 46.5145 827.4 46.4997 827.537 46.4429C827.674 46.3861 827.791 46.29 827.874 46.1667C827.956 46.0433 828 45.8983 828 45.75C828 45.5511 827.921 45.3603 827.78 45.2197C827.64 45.079 827.449 45 827.25 45ZM834.5 49C834.501 49.4853 834.438 49.9687 834.312 50.4375L835.703 51.045C835.806 51.0922 835.89 51.1732 835.942 51.2748C835.993 51.3764 836.008 51.4924 835.984 51.6037C835.961 51.715 835.9 51.815 835.812 51.887C835.724 51.9591 835.614 51.9989 835.5 52C835.431 52.0002 835.363 51.9859 835.3 51.9581L833.961 51.375C833.513 52.311 832.81 53.1012 831.932 53.6543C831.054 54.2075 830.038 54.501 829 54.501C827.962 54.501 826.946 54.2075 826.068 53.6543C825.19 53.1012 824.487 52.311 824.039 51.375L822.7 51.9581C822.637 51.9859 822.569 52.0002 822.5 52C822.385 51.9999 822.274 51.9603 822.185 51.8879C822.096 51.8155 822.034 51.7146 822.011 51.6022C821.987 51.4898 822.003 51.3727 822.056 51.2707C822.109 51.1687 822.195 51.0879 822.3 51.0419L823.688 50.4375C823.562 49.9687 823.499 49.4853 823.5 49V48.5H822C821.867 48.5 821.74 48.4473 821.646 48.3536C821.553 48.2598 821.5 48.1326 821.5 48C821.5 47.8674 821.553 47.7402 821.646 47.6464C821.74 47.5527 821.867 47.5 822 47.5H823.5V47C823.499 46.5146 823.562 46.0313 823.688 45.5625L822.3 44.9581C822.238 44.9328 822.182 44.8955 822.136 44.8483C822.089 44.8011 822.051 44.745 822.026 44.6833C822.001 44.6216 821.989 44.5555 821.99 44.4889C821.991 44.4223 822.005 44.3566 822.032 44.2955C822.058 44.2345 822.097 44.1794 822.145 44.1335C822.193 44.0876 822.25 44.0518 822.312 44.0281C822.375 44.0045 822.441 43.9935 822.508 43.9959C822.574 43.9983 822.64 44.0139 822.7 44.0419L824.039 44.625C824.487 43.689 825.19 42.8988 826.068 42.3457C826.946 41.7925 827.962 41.499 829 41.499C830.038 41.499 831.054 41.7925 831.932 42.3457C832.81 42.8988 833.513 43.689 833.961 44.625L835.3 44.04C835.421 43.9904 835.556 43.99 835.678 44.0391C835.799 44.0882 835.896 44.1827 835.948 44.3025C836 44.4223 836.004 44.5578 835.957 44.68C835.911 44.8022 835.819 44.9013 835.7 44.9562L834.312 45.5656C834.438 46.0344 834.501 46.5178 834.5 47.0031V47.5031H836C836.133 47.5031 836.26 47.5558 836.354 47.6496C836.447 47.7433 836.5 47.8705 836.5 48.0031C836.5 48.1357 836.447 48.2629 836.354 48.3567C836.26 48.4504 836.133 48.5031 836 48.5031H834.5V49ZM824.5 47.5H833.5V47C833.5 45.8065 833.026 44.6619 832.182 43.818C831.338 42.9741 830.193 42.5 829 42.5C827.807 42.5 826.662 42.9741 825.818 43.818C824.974 44.6619 824.5 45.8065 824.5 47V47.5ZM828.5 53.4712V48.5H824.5V49C824.501 50.1064 824.91 51.1737 825.647 51.9983C826.385 52.8229 827.401 53.3472 828.5 53.4712ZM833.5 49V48.5H829.5V53.4712C830.599 53.3472 831.615 52.8229 832.353 51.9983C833.09 51.1737 833.499 50.1064 833.5 49Z"
                fill="currentColor"/>
        </g>
    </svg>
);


const iconMap = {
    'console': <ConsoleIcon/>,
    'fast-data': <FastDataIcon/>,
    'data-catalog': <DataCatalogIcon/>,
    'microfrontend-composer': <MicrofrontendComposerIcon/>,
    'marketplace': <MarketplaceIcon/>
};

export default function Accordion({data}) {
    return data.map((element, key) => {
        const {title, icon, items, defaultOpen = false, type = 'roadmap'} = element;
        const {newFeatures, improvements, bugFixes} = items;
        const [isOpen, setIsOpen] = useState(defaultOpen);
        const toggleAccordion = () => setIsOpen(!isOpen);


        return (
            <div className={styles.accordionContainer} key={key}>
                <button aria-expanded={isOpen} className={classNames(styles.accordionHeader, !isOpen && styles.accordionHeaderClosed)} onClick={toggleAccordion} type="button">
                    <div className={styles.leftSection}>
                    <span className={styles.toggleIcon}>
                        {isOpen ? <ChevronDownIcon/> : <ChevronRightIcon/>}
                    </span>
                        {icon && <MainIcon iconId={icon}/>}
                        <span className={styles.accordionTitle}>{title}</span>
                    </div>
                    <div className={styles.badges}>
                        {newFeatures && newFeatures.length > 0 && (
                            <span className={classNames(styles.badge, styles.newFeatureBadge)}>
                            <NewFeatureIcon/>
                                {newFeatures.length}
                        </span>
                        )}
                        {improvements && improvements.length > 0 && (
                            <span className={classNames(styles.badge, styles.improvementBadge)}>
                            <ImprovementIcon/>
                                {improvements.length}
                        </span>
                        )}
                        {bugFixes && bugFixes.length > 0 && (
                            <span className={classNames(styles.badge, styles.bugFixBadge)}>
                            <BugFixIcon/>
                                {bugFixes.length}
                        </span>
                        )}
                    </div>
                </button>

                {isOpen && (
                    <div className={styles.accordionContent}>
                        {type === 'roadmap' && (
                            <>
                                {newFeatures?.map((feature, featureKey) => (
                                    <FeatureItem
                                        key={`feature_${featureKey}`}
                                        {...feature}
                                    />
                                ))}

                                {improvements?.map((improvement, improvementKey) => (
                                    <FeatureItem
                                        key={`improvement_${improvementKey}`}
                                        {...improvement}
                                    />
                                ))}

                                {bugFixes?.map((bug, bugKey) => (
                                    <FeatureItem
                                        key={`bug_${bugKey}`}
                                        {...bug}
                                    />
                                ))}
                            </>
                        )}

                        {type === 'versions' && (
                            <>
                                <FeatureList
                                    bugFixes={items.bugFixes}
                                    improvements={items.improvements}
                                    newFeatures={items.newFeatures}
                                />
                            </>
                        )}
                    </div>
                )}
            </div>
        );
    });

}
