{
  "openapi": "3.0.0",
  "info": {
    "description": "APIs to interact with Mia-Platform Software Catalog",
    "title": "Mia-Platform Software Catalog",
    "version": "14.0.1"
  },
  "components": {
    "schemas": {
      "http-error": {
        "properties": {
          "code": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "statusCode": {
            "type": "number"
          }
        },
        "title": "HTTP error",
        "type": "object"
      },
      "catalog-category": {
        "title": "Catalog category",
        "description": "Data model of a Catalog category",
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "categoryId",
          "label"
        ]
      },
      "catalog-item-manifest": {
        "title": "Catalog item manifest",
        "description": "Data model of a Catalog item to apply",
        "type": "object",
        "properties": {
          "categoryId": {
            "description": "Identifier of the item's category",
            "type": "string"
          },
          "description": {
            "description": "Brief description of the item",
            "type": "string"
          },
          "documentation": {
            "description": "Documentation of the item",
            "properties": {
              "type": {
                "enum": [
                  "externalLink",
                  "markdown"
                ],
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "required": [
              "type",
              "url"
            ],
            "type": "object"
          },
          "imageUrl": {
            "description": "Url of the image associated with the item",
            "type": "string"
          },
          "itemId": {
            "description": "RFC-1035 compliant identifier of the item. It forms a composite PK with tenantId and, if present, version.name",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?$",
            "type": "string"
          },
          "lifecycleStatus": {
            "description": "Lifecycle status of the item",
            "enum": [
              "coming-soon",
              "draft",
              "published",
              "maintenance",
              "deprecated",
              "archived"
            ],
            "type": "string"
          },
          "name": {
            "description": "Human-readable name of the item",
            "minLength": 1,
            "type": "string"
          },
          "providerId": {
            "description": "Identifier of the provider used to retrieve markdown documentation content and external resources, if supported by the item type",
            "type": "string"
          },
          "publishOnMiaDocumentation": {
            "description": "Flag stating if the resource documentation should be published on Mia-Platform public documentation",
            "type": "boolean"
          },
          "releaseDate": {
            "description": "Creation date of this item's release",
            "format": "date-time",
            "type": "string"
          },
          "repositoryUrl": {
            "description": "URL of the repository containing the source code of the resource created by the item",
            "type": "string"
          },
          "resources": {
            "additionalProperties": true,
            "description": "Representation of the resource that will be created starting from this item. It could be validated through the matching CRD",
            "type": "object"
          },
          "supportedBy": {
            "description": "Identifier of the company that has produced the item",
            "type": "string"
          },
          "supportedByImageUrl": {
            "description": "Url of the image associated with the company that has produced the item",
            "type": "string"
          },
          "tenantId": {
            "description": "Identifier of the tenant to which the item belongs. It forms a composite PK with itemId and, if present, version.name",
            "type": "string"
          },
          "type": {
            "description": "Type of the item. Deprecated in favour of `itemTypeDefinitionRef`. At least one among `type` and `itemTypeDefinitionRef` must be set. If both are set, `type` will be ignored",
            "type": "string",
            "deprecated": true
          },
          "itemTypeDefinitionRef": {
            "description": "Reference to an Item Type Definition in the form of its composite primary key. At least one among `type` and `itemTypeDefinitionRef` must be set. If both are set, `type` will be ignored",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the Item Type Definition (references `itd.metadata.name`)",
                "type": "string",
                "pattern": "^[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?$",
                "minLength": 1,
                "maxLength": 63
              },
              "namespace": {
                "description": "ID of the Item Type Definition namespace (references `itd.metadata.namespace.id`)",
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "name",
              "namespace"
            ],
            "additionalProperties": false
          },
          "version": {
            "description": "Version of the item following semver",
            "properties": {
              "name": {
                "description": "Semantic version",
                "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
                "type": "string"
              },
              "releaseNote": {
                "description": "Markdown release note",
                "type": "string"
              },
              "security": {
                "description": "Flag stating if the version addresses any vulnerability",
                "type": "boolean"
              }
            },
            "required": [
              "name",
              "releaseNote"
            ],
            "type": "object"
          },
          "visibility": {
            "description": "Visibility of the item",
            "properties": {
              "allTenants": {
                "default": false,
                "description": "If true, the item will be accessible to all companies",
                "type": "boolean"
              },
              "public": {
                "default": false,
                "description": "If true, the item will be accessible from any user that access the Console, even if not authenticated",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        },
        "additionalProperties": false,
        "required": [
          "name",
          "itemId",
          "tenantId",
          "resources",
          "lifecycleStatus"
        ]
      },
      "catalog-item": {
        "title": "Catalog item",
        "description": "Data model of a Catalog item",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Database identifier of the item",
            "type": "string"
          },
          "category": {
            "description": "Identifier of the item's category",
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "label": {
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "id",
              "label"
            ]
          },
          "componentsIds": {
            "description": "List of source component ids of the services in the item's resources",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "description": {
            "description": "Brief description of the item",
            "type": "string"
          },
          "documentation": {
            "description": "Documentation of the item",
            "properties": {
              "type": {
                "enum": [
                  "externalLink",
                  "markdown"
                ],
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "required": [
              "type",
              "url"
            ],
            "type": "object"
          },
          "imageUrl": {
            "description": "Url of the image associated with the item",
            "type": "string"
          },
          "isLatest": {
            "description": "Flag stating if the the current document is the latest version of the item",
            "type": "boolean"
          },
          "itemId": {
            "description": "RFC-1035 compliant identifier of the item. It forms a composite PK with tenantId and, if present, version.name",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?$",
            "type": "string"
          },
          "lifecycleStatus": {
            "description": "Lifecycle status of the item",
            "enum": [
              "coming-soon",
              "draft",
              "published",
              "maintenance",
              "deprecated",
              "archived"
            ],
            "type": "string"
          },
          "name": {
            "description": "Human-readable name of the item",
            "minLength": 1,
            "type": "string"
          },
          "providerId": {
            "description": "Identifier of the provider used to retrieve markdown documentation content and external resources, if supported by the item type",
            "type": "string"
          },
          "publishOnMiaDocumentation": {
            "description": "Flag stating if the resource documentation should be published on Mia-Platform public documentation",
            "type": "boolean"
          },
          "releaseDate": {
            "description": "Creation date of this item's release",
            "format": "date-time",
            "type": "string"
          },
          "repositoryUrl": {
            "description": "URL of the repository containing the source code of the resource created by the item",
            "type": "string"
          },
          "resources": {
            "additionalProperties": true,
            "description": "Representation of the resource that will be created starting from this item. It could be validated through the matching CRD",
            "type": "object"
          },
          "supportedBy": {
            "description": "Identifier of the company that has produced the item",
            "type": "string"
          },
          "supportedByImageUrl": {
            "description": "Url of the image associated with the company that has produced the item",
            "type": "string"
          },
          "tenantId": {
            "description": "Identifier of the tenant to which the item belongs. It forms a composite PK with itemId and, if present, version.name",
            "type": "string"
          },
          "type": {
            "description": "Type of the item. Deprecated in favour of `itemTypeDefinitionRef` (it always matches `itemTypeDefinitionRef.name`)",
            "type": "string",
            "deprecated": true
          },
          "itemTypeDefinitionRef": {
            "description": "Reference to an Item Type Definition in the form of its composite primary key",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the Item Type Definition (references `itd.metadata.name`)",
                "type": "string",
                "pattern": "^[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?$",
                "minLength": 1,
                "maxLength": 63
              },
              "namespace": {
                "description": "ID of the Item Type Definition namespace (references `itd.metadata.namespace.id`)",
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "name",
              "namespace"
            ],
            "additionalProperties": false
          },
          "version": {
            "description": "Version of the item following semver",
            "properties": {
              "name": {
                "description": "Semantic version",
                "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
                "type": "string"
              },
              "releaseNote": {
                "description": "Markdown release note",
                "type": "string"
              },
              "security": {
                "description": "Flag stating if the version addresses any vulnerability",
                "type": "boolean"
              }
            },
            "required": [
              "name",
              "releaseNote"
            ],
            "type": "object"
          },
          "visibility": {
            "description": "Visibility of the item",
            "properties": {
              "allTenants": {
                "default": false,
                "description": "If true, the item will be accessible to all companies",
                "type": "boolean"
              },
              "public": {
                "default": false,
                "description": "If true, the item will be accessible from any user that access the Console, even if not authenticated",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        },
        "additionalProperties": false,
        "required": [
          "_id",
          "name",
          "itemId",
          "tenantId",
          "type",
          "itemTypeDefinitionRef",
          "releaseDate",
          "lifecycleStatus"
        ]
      },
      "catalog-release": {
        "title": "Catalog release",
        "description": "Data model of a Catalog item release",
        "type": "object",
        "properties": {
          "description": {
            "description": "Brief description of the item",
            "type": "string"
          },
          "isLatest": {
            "description": "Flag stating if the the current document is the latest version of the item",
            "type": "boolean"
          },
          "lifecycleStatus": {
            "description": "Lifecycle status of the item",
            "enum": [
              "coming-soon",
              "draft",
              "published",
              "maintenance",
              "deprecated",
              "archived"
            ],
            "type": "string"
          },
          "name": {
            "description": "Human-readable name of the item",
            "minLength": 1,
            "type": "string"
          },
          "reference": {
            "description": "Mongo objectId of the item",
            "type": "string"
          },
          "releaseDate": {
            "description": "Creation date of this item's release",
            "format": "date-time",
            "type": "string"
          },
          "releaseNote": {
            "description": "Markdown release note",
            "type": "string"
          },
          "security": {
            "description": "Flag stating if the version addresses any vulnerability",
            "type": "boolean"
          },
          "version": {
            "oneOf": [
              {
                "description": "Semantic version",
                "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
                "type": "string"
              },
              {
                "description": "Fallback version",
                "enum": [
                  "NA"
                ]
              }
            ]
          },
          "visibility": {
            "description": "Visibility of the item",
            "properties": {
              "allTenants": {
                "default": false,
                "description": "If true, the item will be accessible to all companies",
                "type": "boolean"
              },
              "public": {
                "default": false,
                "description": "If true, the item will be accessible from any user that access the Console, even if not authenticated",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        },
        "additionalProperties": false,
        "required": [
          "name",
          "description",
          "version",
          "reference",
          "releaseNote",
          "releaseDate",
          "lifecycleStatus"
        ]
      },
      "catalog-versioned-item": {
        "title": "Catalog versioned item",
        "description": "Data model of a Catalog item with required version",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Database identifier of the item",
            "type": "string"
          },
          "category": {
            "description": "Identifier of the item's category",
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "label": {
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "id",
              "label"
            ]
          },
          "componentsIds": {
            "description": "List of source component ids of the services in the item's resources",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "description": {
            "description": "Brief description of the item",
            "type": "string"
          },
          "documentation": {
            "description": "Documentation of the item",
            "properties": {
              "type": {
                "enum": [
                  "externalLink",
                  "markdown"
                ],
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "required": [
              "type",
              "url"
            ],
            "type": "object"
          },
          "imageUrl": {
            "description": "Url of the image associated with the item",
            "type": "string"
          },
          "isLatest": {
            "description": "Flag stating if the the current document is the latest version of the item",
            "type": "boolean"
          },
          "itemId": {
            "description": "RFC-1035 compliant identifier of the item. It forms a composite PK with tenantId and, if present, version.name",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?$",
            "type": "string"
          },
          "lifecycleStatus": {
            "description": "Lifecycle status of the item",
            "enum": [
              "coming-soon",
              "draft",
              "published",
              "maintenance",
              "deprecated",
              "archived"
            ],
            "type": "string"
          },
          "name": {
            "description": "Human-readable name of the item",
            "minLength": 1,
            "type": "string"
          },
          "providerId": {
            "description": "Identifier of the provider used to retrieve markdown documentation content and external resources, if supported by the item type",
            "type": "string"
          },
          "publishOnMiaDocumentation": {
            "description": "Flag stating if the resource documentation should be published on Mia-Platform public documentation",
            "type": "boolean"
          },
          "releaseDate": {
            "description": "Creation date of this item's release",
            "format": "date-time",
            "type": "string"
          },
          "repositoryUrl": {
            "description": "URL of the repository containing the source code of the resource created by the item",
            "type": "string"
          },
          "resources": {
            "additionalProperties": true,
            "description": "Representation of the resource that will be created starting from this item. It could be validated through the matching CRD",
            "type": "object"
          },
          "supportedBy": {
            "description": "Identifier of the company that has produced the item",
            "type": "string"
          },
          "supportedByImageUrl": {
            "description": "Url of the image associated with the company that has produced the item",
            "type": "string"
          },
          "tenantId": {
            "description": "Identifier of the tenant to which the item belongs. It forms a composite PK with itemId and, if present, version.name",
            "type": "string"
          },
          "type": {
            "description": "Type of the item. Deprecated in favour of `itemTypeDefinitionRef` (it always matches `itemTypeDefinitionRef.name`)",
            "type": "string",
            "deprecated": true
          },
          "itemTypeDefinitionRef": {
            "description": "Reference to an Item Type Definition in the form of its composite primary key",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the Item Type Definition (references `itd.metadata.name`)",
                "type": "string",
                "pattern": "^[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?$",
                "minLength": 1,
                "maxLength": 63
              },
              "namespace": {
                "description": "ID of the Item Type Definition namespace (references `itd.metadata.namespace.id`)",
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "name",
              "namespace"
            ],
            "additionalProperties": false
          },
          "version": {
            "description": "Version of the item",
            "properties": {
              "name": {
                "oneOf": [
                  {
                    "description": "Semantic version",
                    "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
                    "type": "string"
                  },
                  {
                    "description": "Fallback version",
                    "enum": [
                      "NA"
                    ]
                  }
                ]
              },
              "releaseNote": {
                "description": "Markdown release note",
                "type": "string"
              },
              "security": {
                "description": "Flag stating if the version addresses any vulnerability",
                "type": "boolean"
              }
            },
            "required": [
              "name",
              "releaseNote"
            ],
            "type": "object"
          },
          "visibility": {
            "description": "Visibility of the item",
            "properties": {
              "allTenants": {
                "default": false,
                "description": "If true, the item will be accessible to all companies",
                "type": "boolean"
              },
              "public": {
                "default": false,
                "description": "If true, the item will be accessible from any user that access the Console, even if not authenticated",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        },
        "additionalProperties": false,
        "required": [
          "_id",
          "name",
          "itemId",
          "tenantId",
          "type",
          "itemTypeDefinitionRef",
          "releaseDate",
          "lifecycleStatus",
          "version"
        ]
      },
      "catalog-item-metadata": {
        "title": "Catalog item metadata",
        "description": "Data model of a Catalog item metadata",
        "type": "object",
        "properties": {
          "itemId": {
            "description": "RFC-1035 compliant identifier of the item. It forms a composite PK with tenantId and, if present, version.name",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?$",
            "type": "string"
          },
          "tenantId": {
            "description": "Identifier of the tenant to which the item belongs. It forms a composite PK with itemId and, if present, version.name",
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "application",
              "plugin",
              "proxy",
              "sidecar",
              "template"
            ]
          },
          "versions": {
            "items": {
              "additionalProperties": false,
              "properties": {
                "componentId": {
                  "type": "string"
                },
                "dockerImage": {
                  "pattern": "^(?:[a-z0-9.\\-\\/:]+\\/)?([\\w.}{\\-\\/]+)(:[\\w.}{\\-]+)?$",
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "name": {
                  "description": "Human-readable name of the item",
                  "minLength": 1,
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "version": {
                  "oneOf": [
                    {
                      "description": "Semantic version",
                      "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
                      "type": "string"
                    },
                    {
                      "description": "Fallback version",
                      "enum": [
                        "NA"
                      ]
                    }
                  ]
                }
              },
              "required": [
                "id",
                "version"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "additionalProperties": false,
        "required": [
          "itemId",
          "tenantId",
          "type",
          "versions"
        ]
      },
      "catalog-crd": {
        "title": "Catalog CRD",
        "description": "Data model of a Catalog Custom Resource Definition",
        "type": "object",
        "properties": {
          "description": {
            "description": "Brief description of the item",
            "type": "string"
          },
          "itemId": {
            "description": "RFC-1035 compliant identifier of the item. It forms a composite PK with tenantId and, if present, version.name",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?$",
            "type": "string"
          },
          "name": {
            "description": "Human-readable name of the item",
            "minLength": 1,
            "type": "string"
          },
          "resources": {
            "type": "object",
            "properties": {
              "controlledFields": {
                "description": "List detailing the fields that are managed by the Marketplace item",
                "items": {
                  "properties": {
                    "jsonPath": {
                      "description": "JSON path to access the marketplace item value",
                      "type": "string"
                    },
                    "key": {
                      "description": "Unique name of the field",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "jsonPath"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "isVersioningSupported": {
                "description": "States if versioning is supported for the custom resource defined by the CRD",
                "type": "boolean"
              },
              "name": {
                "description": "Type of the described resource",
                "type": "string"
              },
              "validation": {
                "description": "How to validate the defined resource",
                "oneOf": [
                  {
                    "description": "Validation through JSON schema",
                    "properties": {
                      "jsonSchema": {
                        "additionalProperties": true,
                        "type": "object"
                      }
                    },
                    "required": [
                      "jsonSchema"
                    ],
                    "type": "object"
                  },
                  {
                    "description": "Validation through webhook",
                    "properties": {
                      "validationWebhook": {
                        "properties": {
                          "urls": {
                            "properties": {
                              "schema": {
                                "description": "URL to the schema",
                                "pattern": "^https?:\\/\\/([^:\\/\\s]+)((:[0-9]{1,5})?(\\/.*)?)([^\\/:])\\/?$",
                                "type": "string"
                              },
                              "validation": {
                                "description": "URL to the validation webhook",
                                "pattern": "^https?:\\/\\/([^:\\/\\s]+)((:[0-9]{1,5})?(\\/.*)?)([^\\/:])\\/?$",
                                "type": "string"
                              }
                            },
                            "required": [
                              "validation"
                            ],
                            "type": "object"
                          }
                        },
                        "required": [
                          "urls"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "validationWebhook"
                    ],
                    "type": "object"
                  }
                ]
              }
            },
            "additionalProperties": false,
            "required": [
              "name"
            ]
          },
          "tenantId": {
            "description": "Identifier of the tenant to which the item belongs. It forms a composite PK with itemId and, if present, version.name",
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "name",
          "itemId",
          "tenantId",
          "resources"
        ]
      },
      "software-catalog-item-type-definition": {
        "title": "Software Catalog Item Type Definition",
        "description": "Data model of a Software Catalog Item Type Definition",
        "type": "object",
        "properties": {
          "apiVersion": {
            "enum": [
              "software-catalog.mia-platform.eu/v1"
            ]
          },
          "kind": {
            "enum": [
              "item-type-definition"
            ]
          },
          "metadata": {
            "description": "Descriptive properties referring to this type definition entity itself",
            "type": "object",
            "properties": {
              "namespace": {
                "description": "Read-only namespace the resource belongs to and within which its name must be unique",
                "type": "object",
                "properties": {
                  "scope": {
                    "enum": [
                      "tenant"
                    ]
                  },
                  "id": {
                    "description": "Identifier of the tenant",
                    "type": "string",
                    "minLength": 1
                  }
                },
                "additionalProperties": false,
                "required": [
                  "scope",
                  "id"
                ]
              },
              "name": {
                "description": "Read-only RFC-1035 compliant string that uniquely identifies the resource within its namespace. Must match the `spec.itemType` field",
                "type": "string",
                "pattern": "^[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?$",
                "minLength": 1,
                "maxLength": 63
              },
              "visibility": {
                "description": "Visibility on the resource",
                "oneOf": [
                  {
                    "description": "Resource visible to all tenants of the Console installation",
                    "type": "object",
                    "properties": {
                      "scope": {
                        "enum": [
                          "console"
                        ]
                      }
                    },
                    "required": [
                      "scope"
                    ]
                  },
                  {
                    "description": "Resource visible to a subset of tenants",
                    "type": "object",
                    "properties": {
                      "scope": {
                        "enum": [
                          "tenant"
                        ]
                      },
                      "ids": {
                        "description": "Identifies of the tenants with visibility on the resource. For now, it can only contain the namespace of the resource",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1,
                        "maxItems": 1
                      }
                    },
                    "required": [
                      "scope",
                      "ids"
                    ]
                  }
                ]
              },
              "displayName": {
                "description": "Display name of the resource. Clients may also use it as the display name associated with the items of the defined type",
                "type": "string",
                "minLength": 1
              },
              "description": {
                "description": "Display name of the resource. Clients may also use it as the description associated with the items of the defined type",
                "type": "string"
              },
              "icon": {
                "description": "Icon of the resource. Clients may also use it as the icon associated with the items of the defined type",
                "type": "object",
                "properties": {
                  "mediaType": {
                    "description": "MIME type of the image",
                    "type": "string",
                    "enum": [
                      "image/png",
                      "image/svg+xml"
                    ]
                  },
                  "base64Data": {
                    "description": "Image data encoded in Base64 format",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "mediaType",
                  "base64Data"
                ]
              },
              "documentation": {
                "description": "Documentation regarding the resource. Clients may also use it as the documentation associated with the items of the defined type",
                "oneOf": [
                  {
                    "description": "External documentation",
                    "type": "object",
                    "properties": {
                      "type": {
                        "enum": [
                          "external"
                        ]
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "type",
                      "url"
                    ]
                  }
                ]
              },
              "labels": {
                "description": "Set of identifying key/value pairs akin to Kubernetes object labels",
                "type": "object",
                "additionalProperties": {
                  "type": "string",
                  "pattern": "^$|^[a-zA-Z0-9](?:[a-zA-Z0-9._-]{0,61}[a-zA-Z0-9])?$",
                  "maxLength": 63
                }
              },
              "annotations": {
                "description": "Set of non-identifying key/value pairs akin to Kubernetes object annotations",
                "type": "object",
                "additionalProperties": {
                  "type": "string",
                  "pattern": "^$|^[a-zA-Z0-9](?:[a-zA-Z0-9._-]{0,61}[a-zA-Z0-9])?$",
                  "maxLength": 63
                }
              },
              "tags": {
                "description": "List of single-valued strings",
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^[a-z0-9:+#]+(-[a-z0-9:+#]+)*$",
                  "minLength": 1,
                  "maxLength": 63
                }
              },
              "links": {
                "description": "List of external hyperlinks",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "description": "URL in standard uri format",
                      "type": "string"
                    },
                    "displayName": {
                      "description": "User friendly display name for the link",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "url"
                  ]
                }
              },
              "maintainers": {
                "description": "List of organizational entities maintaining the resource",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Display name of the entity",
                      "type": "string",
                      "minLength": 1
                    },
                    "email": {
                      "description": "Contact email of the entity",
                      "type": "string",
                      "format": "email",
                      "minLength": 1
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "name"
                  ]
                }
              },
              "publisher": {
                "description": "Entity providing the resource",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Display name of the entity",
                    "type": "string",
                    "minLength": 1
                  },
                  "url": {
                    "description": "Link to the entity webpage",
                    "type": "string",
                    "minLength": 1
                  },
                  "image": {
                    "description": "Entity logo or relevant image",
                    "type": "object",
                    "properties": {
                      "mediaType": {
                        "description": "MIME type of the image",
                        "type": "string",
                        "enum": [
                          "image/png",
                          "image/svg+xml"
                        ]
                      },
                      "base64Data": {
                        "description": "Image data encoded in Base64 format",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "mediaType",
                      "base64Data"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "name"
                ]
              }
            },
            "additionalProperties": true,
            "required": [
              "namespace",
              "name",
              "visibility"
            ]
          },
          "spec": {
            "description": "State definition referring to the items of the type defined by this type definition entity",
            "type": "object",
            "properties": {
              "type": {
                "description": "Read-only item type defined by the type definition. It must match the `metadata.name` field",
                "type": "string",
                "pattern": "^[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?$",
                "minLength": 1,
                "maxLength": 63
              },
              "scope": {
                "description": "Software Catalog scope where items of the defined type should be managed",
                "type": "string",
                "enum": [
                  "tenant"
                ]
              },
              "isVersioningSupported": {
                "description": "Whether the defined item type supports versioning",
                "type": "boolean"
              },
              "validation": {
                "description": "Indication on how to validate the defined item type resources",
                "oneOf": [
                  {
                    "description": "Validation through JSON schema",
                    "type": "object",
                    "properties": {
                      "mechanism": {
                        "enum": [
                          "json-schema"
                        ]
                      },
                      "schema": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "mechanism",
                      "schema"
                    ]
                  }
                ]
              },
              "controlledFields": {
                "description": "List of fields managed by the Catalog",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "jsonPath": {
                      "description": "JSON path to access the marketplace item value",
                      "type": "string"
                    },
                    "key": {
                      "description": "Unique name of the field",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "key",
                    "jsonPath"
                  ]
                }
              }
            },
            "additionalProperties": true,
            "required": [
              "type",
              "scope",
              "validation"
            ]
          },
          "__v": {
            "description": "Read-only opaque value that represents the internal version of the document",
            "type": "integer",
            "minimum": 0
          }
        },
        "additionalProperties": false,
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ]
      },
      "legacy-catalog-category": {
        "additionalProperties": false,
        "description": "Data model of a Catalog category",
        "properties": {
          "categoryId": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "required": [
          "categoryId",
          "label"
        ],
        "title": "Legacy catalog category",
        "type": "object"
      },
      "legacy-catalog-item-manifest": {
        "additionalProperties": false,
        "description": "Data model of a Catalog item to apply",
        "properties": {
          "categoryId": {
            "description": "Identifier of the item's category",
            "type": "string"
          },
          "comingSoon": {
            "description": "Flag that will prevent the use of the item",
            "nullable": true,
            "type": "boolean"
          },
          "description": {
            "description": "Brief description of the item",
            "type": "string"
          },
          "documentation": {
            "description": "Documentation of the item",
            "nullable": true,
            "properties": {
              "type": {
                "enum": [
                  "externalLink",
                  "markdown"
                ],
                "type": "string"
              },
              "url": {
                "format": "uri-reference",
                "type": "string"
              }
            },
            "required": [
              "type",
              "url"
            ],
            "type": "object"
          },
          "imageUrl": {
            "description": "Url of the image associated with the item",
            "format": "uri-reference",
            "type": "string"
          },
          "isVersioningSupported": {
            "description": "States if versioning is supported for the custom resource defined by the CRD. Applicable only for type \"custom-resource-definition\"",
            "type": "boolean"
          },
          "itemId": {
            "description": "RFC-1035 compliant identifier of the item. It forms a composite PK with tenantId and, if present, version.name",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?$",
            "type": "string"
          },
          "name": {
            "description": "Human-readable name of the item",
            "minLength": 1,
            "type": "string"
          },
          "providerId": {
            "description": "Identifier of the provider used to retrieve markdown documentation content and external resources, if supported by the item type",
            "type": "string"
          },
          "publishOnMiaDocumentation": {
            "description": "Flag stating if the resource documentation should be published on Mia-Platform public documentation",
            "nullable": true,
            "type": "boolean"
          },
          "releaseStage": {
            "description": "Release stage of the item",
            "enum": [
              "beta",
              "deprecated",
              "",
              "preview",
              "stable"
            ],
            "type": "string"
          },
          "repositoryUrl": {
            "description": "URL of the repository containing the source code of the resource created by the item",
            "format": "uri-reference",
            "nullable": true,
            "type": "string"
          },
          "resources": {
            "additionalProperties": true,
            "description": "Representation of the resource that will be created starting from this item. It could be validated through the matching CRD",
            "type": "object"
          },
          "supportedBy": {
            "description": "Identifier of the company that has produced the item",
            "type": "string"
          },
          "supportedByImageUrl": {
            "description": "Url of the image associated with the company that has produced the item",
            "format": "uri-reference",
            "type": "string"
          },
          "tenantId": {
            "description": "Identifier of the tenant to which the item belongs. It forms a composite PK with itemId and, if present, version.name",
            "type": "string"
          },
          "type": {
            "description": "Type of the item. It must match a CRD resources.name property",
            "type": "string"
          },
          "version": {
            "description": "Version of the item following semver",
            "properties": {
              "name": {
                "description": "Semantic version",
                "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
                "type": "string"
              },
              "releaseNote": {
                "description": "Markdown release note",
                "type": "string"
              },
              "security": {
                "description": "Flag stating if the version addresses any vulnerability",
                "type": "boolean"
              }
            },
            "required": [
              "name",
              "releaseNote"
            ],
            "type": "object"
          },
          "visibility": {
            "description": "Visibility of the item",
            "properties": {
              "allTenants": {
                "default": false,
                "description": "If true, the item will be accessible to all companies",
                "type": "boolean"
              },
              "public": {
                "default": false,
                "description": "If true, the item will be accessible from any user that access the Console, even if not authenticated",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        },
        "required": [
          "name",
          "itemId",
          "tenantId",
          "type",
          "resources"
        ],
        "title": "Legacy catalog item manifest",
        "type": "object"
      },
      "legacy-catalog-item": {
        "additionalProperties": false,
        "description": "Data model of a Catalog item",
        "properties": {
          "_id": {
            "description": "Database identifier of the item",
            "type": "string"
          },
          "category": {
            "additionalProperties": false,
            "description": "Identifier of the item's category",
            "properties": {
              "id": {
                "type": "string"
              },
              "label": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "label"
            ],
            "type": "object"
          },
          "comingSoon": {
            "description": "Flag that will prevent the use of the item",
            "nullable": true,
            "type": "boolean"
          },
          "componentsIds": {
            "description": "List of source component ids of the services in the item's resources",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "description": {
            "description": "Brief description of the item",
            "type": "string"
          },
          "documentation": {
            "description": "Documentation of the item",
            "nullable": true,
            "properties": {
              "type": {
                "enum": [
                  "externalLink",
                  "markdown"
                ],
                "type": "string"
              },
              "url": {
                "format": "uri-reference",
                "type": "string"
              }
            },
            "required": [
              "type",
              "url"
            ],
            "type": "object"
          },
          "imageUrl": {
            "description": "Url of the image associated with the item",
            "format": "uri-reference",
            "type": "string"
          },
          "isLatest": {
            "description": "Flag stating if the the current document is the latest version of the item",
            "type": "boolean"
          },
          "isVersioningSupported": {
            "description": "States if versioning is supported for the custom resource defined by the CRD. Applicable only for type \"custom-resource-definition\"",
            "type": "boolean"
          },
          "itemId": {
            "description": "RFC-1035 compliant identifier of the item. It forms a composite PK with tenantId and, if present, version.name",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?$",
            "type": "string"
          },
          "name": {
            "description": "Human-readable name of the item",
            "minLength": 1,
            "type": "string"
          },
          "providerId": {
            "description": "Identifier of the provider used to retrieve markdown documentation content and external resources, if supported by the item type",
            "type": "string"
          },
          "publishOnMiaDocumentation": {
            "description": "Flag stating if the resource documentation should be published on Mia-Platform public documentation",
            "nullable": true,
            "type": "boolean"
          },
          "releaseDate": {
            "description": "Creation date of this item's release",
            "format": "date-time",
            "type": "string"
          },
          "releaseStage": {
            "description": "Release stage of the item",
            "enum": [
              "beta",
              "deprecated",
              "",
              "preview",
              "stable"
            ],
            "type": "string"
          },
          "repositoryUrl": {
            "description": "URL of the repository containing the source code of the resource created by the item",
            "format": "uri-reference",
            "nullable": true,
            "type": "string"
          },
          "resources": {
            "additionalProperties": true,
            "description": "Representation of the resource that will be created starting from this item. It could be validated through the matching CRD",
            "type": "object"
          },
          "supportedBy": {
            "description": "Identifier of the company that has produced the item",
            "type": "string"
          },
          "supportedByImageUrl": {
            "description": "Url of the image associated with the company that has produced the item",
            "format": "uri-reference",
            "type": "string"
          },
          "tenantId": {
            "description": "Identifier of the tenant to which the item belongs. It forms a composite PK with itemId and, if present, version.name",
            "type": "string"
          },
          "type": {
            "description": "Type of the item. It must match a CRD resources.name property",
            "type": "string"
          },
          "version": {
            "description": "Version of the item following semver",
            "properties": {
              "name": {
                "description": "Semantic version",
                "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
                "type": "string"
              },
              "releaseNote": {
                "description": "Markdown release note",
                "type": "string"
              },
              "security": {
                "description": "Flag stating if the version addresses any vulnerability",
                "type": "boolean"
              }
            },
            "required": [
              "name",
              "releaseNote"
            ],
            "type": "object"
          },
          "visibility": {
            "description": "Visibility of the item",
            "properties": {
              "allTenants": {
                "default": false,
                "description": "If true, the item will be accessible to all companies",
                "type": "boolean"
              },
              "public": {
                "default": false,
                "description": "If true, the item will be accessible from any user that access the Console, even if not authenticated",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        },
        "required": [
          "_id",
          "name",
          "itemId",
          "tenantId",
          "type"
        ],
        "title": "Legacy catalog item",
        "type": "object"
      },
      "legacy-catalog-release": {
        "additionalProperties": false,
        "description": "Data model of a Catalog item release",
        "properties": {
          "comingSoon": {
            "description": "Flag that will prevent the use of the item",
            "nullable": true,
            "type": "boolean"
          },
          "description": {
            "description": "Brief description of the item",
            "type": "string"
          },
          "isLatest": {
            "description": "Flag stating if the the current document is the latest version of the item",
            "type": "boolean"
          },
          "name": {
            "description": "Human-readable name of the item",
            "minLength": 1,
            "type": "string"
          },
          "reference": {
            "description": "Mongo objectId of the item",
            "type": "string"
          },
          "releaseDate": {
            "description": "Creation date of this item's release",
            "format": "date-time",
            "type": "string"
          },
          "releaseNote": {
            "description": "Markdown release note",
            "type": "string"
          },
          "releaseStage": {
            "description": "Release stage of the item",
            "enum": [
              "beta",
              "deprecated",
              "",
              "preview",
              "stable"
            ],
            "type": "string"
          },
          "security": {
            "description": "Flag stating if the version addresses any vulnerability",
            "type": "boolean"
          },
          "version": {
            "oneOf": [
              {
                "description": "Semantic version",
                "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
                "type": "string"
              },
              {
                "description": "Fallback version",
                "enum": [
                  "NA"
                ]
              }
            ]
          },
          "visibility": {
            "description": "Visibility of the item",
            "properties": {
              "allTenants": {
                "default": false,
                "description": "If true, the item will be accessible to all companies",
                "type": "boolean"
              },
              "public": {
                "default": false,
                "description": "If true, the item will be accessible from any user that access the Console, even if not authenticated",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        },
        "required": [
          "name",
          "description",
          "version",
          "reference",
          "releaseNote",
          "releaseDate"
        ],
        "title": "Legacy catalog release",
        "type": "object"
      },
      "legacy-catalog-versioned-item": {
        "additionalProperties": false,
        "description": "Data model of a Catalog item with required version",
        "properties": {
          "_id": {
            "description": "Database identifier of the item",
            "type": "string"
          },
          "category": {
            "additionalProperties": false,
            "description": "Identifier of the item's category",
            "properties": {
              "id": {
                "type": "string"
              },
              "label": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "label"
            ],
            "type": "object"
          },
          "comingSoon": {
            "description": "Flag that will prevent the use of the item",
            "nullable": true,
            "type": "boolean"
          },
          "componentsIds": {
            "description": "List of source component ids of the services in the item's resources",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "description": {
            "description": "Brief description of the item",
            "type": "string"
          },
          "documentation": {
            "description": "Documentation of the item",
            "nullable": true,
            "properties": {
              "type": {
                "enum": [
                  "externalLink",
                  "markdown"
                ],
                "type": "string"
              },
              "url": {
                "format": "uri-reference",
                "type": "string"
              }
            },
            "required": [
              "type",
              "url"
            ],
            "type": "object"
          },
          "imageUrl": {
            "description": "Url of the image associated with the item",
            "format": "uri-reference",
            "type": "string"
          },
          "isLatest": {
            "description": "Flag stating if the the current document is the latest version of the item",
            "type": "boolean"
          },
          "isVersioningSupported": {
            "description": "States if versioning is supported for the custom resource defined by the CRD. Applicable only for type \"custom-resource-definition\"",
            "type": "boolean"
          },
          "itemId": {
            "description": "RFC-1035 compliant identifier of the item. It forms a composite PK with tenantId and, if present, version.name",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?$",
            "type": "string"
          },
          "name": {
            "description": "Human-readable name of the item",
            "minLength": 1,
            "type": "string"
          },
          "providerId": {
            "description": "Identifier of the provider used to retrieve markdown documentation content and external resources, if supported by the item type",
            "type": "string"
          },
          "publishOnMiaDocumentation": {
            "description": "Flag stating if the resource documentation should be published on Mia-Platform public documentation",
            "nullable": true,
            "type": "boolean"
          },
          "releaseDate": {
            "description": "Creation date of this item's release",
            "format": "date-time",
            "type": "string"
          },
          "releaseStage": {
            "description": "Release stage of the item",
            "enum": [
              "beta",
              "deprecated",
              "",
              "preview",
              "stable"
            ],
            "type": "string"
          },
          "repositoryUrl": {
            "description": "URL of the repository containing the source code of the resource created by the item",
            "format": "uri-reference",
            "nullable": true,
            "type": "string"
          },
          "resources": {
            "additionalProperties": true,
            "description": "Representation of the resource that will be created starting from this item. It could be validated through the matching CRD",
            "type": "object"
          },
          "supportedBy": {
            "description": "Identifier of the company that has produced the item",
            "type": "string"
          },
          "supportedByImageUrl": {
            "description": "Url of the image associated with the company that has produced the item",
            "format": "uri-reference",
            "type": "string"
          },
          "tenantId": {
            "description": "Identifier of the tenant to which the item belongs. It forms a composite PK with itemId and, if present, version.name",
            "type": "string"
          },
          "type": {
            "description": "Type of the item. It must match a CRD resources.name property",
            "type": "string"
          },
          "version": {
            "description": "Version of the item",
            "properties": {
              "name": {
                "oneOf": [
                  {
                    "description": "Semantic version",
                    "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
                    "type": "string"
                  },
                  {
                    "description": "Fallback version",
                    "enum": [
                      "NA"
                    ]
                  }
                ]
              },
              "releaseNote": {
                "description": "Markdown release note",
                "type": "string"
              },
              "security": {
                "description": "Flag stating if the version addresses any vulnerability",
                "type": "boolean"
              }
            },
            "required": [
              "name",
              "releaseNote"
            ],
            "type": "object"
          },
          "visibility": {
            "description": "Visibility of the item",
            "properties": {
              "allTenants": {
                "default": false,
                "description": "If true, the item will be accessible to all companies",
                "type": "boolean"
              },
              "public": {
                "default": false,
                "description": "If true, the item will be accessible from any user that access the Console, even if not authenticated",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        },
        "required": [
          "_id",
          "name",
          "itemId",
          "tenantId",
          "type",
          "version"
        ],
        "title": "Legacy catalog versioned item",
        "type": "object"
      },
      "legacy-catalog-item-metadata": {
        "additionalProperties": false,
        "description": "Data model of a Catalog item metadata",
        "properties": {
          "itemId": {
            "description": "RFC-1035 compliant identifier of the item. It forms a composite PK with tenantId and, if present, version.name",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?$",
            "type": "string"
          },
          "tenantId": {
            "description": "Identifier of the tenant to which the item belongs. It forms a composite PK with itemId and, if present, version.name",
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "template",
              "plugin",
              "example",
              "proxy",
              "sidecar"
            ]
          },
          "versions": {
            "items": {
              "additionalProperties": false,
              "properties": {
                "componentId": {
                  "type": "string"
                },
                "dockerImage": {
                  "pattern": "^(?:[a-z0-9.\\-\\/:]+\\/)?([\\w.}{\\-\\/]+)(:[\\w.}{\\-]+)?$",
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "name": {
                  "description": "Human-readable name of the item",
                  "minLength": 1,
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "version": {
                  "oneOf": [
                    {
                      "description": "Semantic version",
                      "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
                      "type": "string"
                    },
                    {
                      "description": "Fallback version",
                      "enum": [
                        "NA"
                      ]
                    }
                  ]
                }
              },
              "required": [
                "id",
                "version"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": [
          "itemId",
          "tenantId",
          "type",
          "versions"
        ],
        "title": "Legacy catalog item metadata",
        "type": "object"
      }
    }
  },
  "paths": {
    "/api/marketplace/item-type-definitions": {
      "get": {
        "operationId": "softwareCatalogItemTypeDefinitionGetList",
        "summary": "Returns a list of all the Item Type Definitions the caller has permission to see",
        "tags": [
          "marketplace"
        ],
        "description": "Returns a paginated list of all the Item Type Definitions the caller has permission to see (i.e., the ones available to all tenants and the private ones of tenants the user has permission to see)",
        "parameters": [
          {
            "schema": {
              "default": 1,
              "minimum": 1,
              "type": "integer"
            },
            "in": "query",
            "name": "page",
            "required": false,
            "description": "Page number to be retrieved"
          },
          {
            "schema": {
              "default": 50,
              "maximum": 200,
              "minimum": 1,
              "type": "integer"
            },
            "in": "query",
            "name": "perPage",
            "required": false,
            "description": "Number of items per page"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "displayName",
            "required": false,
            "description": "A comma-separated list of case-sensitive display names to filter by"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "labels",
            "required": false,
            "description": "A comma-separated list of Kubernetes-like [equality-based selectors](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#equality-based-requirement)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "maintainers",
            "required": false,
            "description": "A comma-separated list of case-sensitive maintainer names to filter by"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "required": false,
            "description": "A comma-separated list of names to filter by"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "namespace",
            "required": false,
            "description": "A comma-separated list of namespace IDs to filter by"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "publisher",
            "required": false,
            "description": "A comma-separated list of case-sensitive publisher names to filter by"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "required": false,
            "description": "A string value used to perform a case-insensitive fuzzy regex search on the `metadata.name`, `metadata.displayName`, and `metadata.publisher.name` fields"
          },
          {
            "schema": {
              "pattern": "^(-?)(?:name|displayName|publisher)(?:,(-?)(?:name|displayName|publisher))*$",
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "required": false,
            "description": "A comma-separated list of fields for which the results should be sorted. Possible values are `name`, `displayName`, `publisher`. Default sort is ascending, for descending order add a \"-\" before the field"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "urn",
            "required": false,
            "description": "A comma-separated list of URNs used to fetch a specific Item Type Definition, where the URN pattern is `urn:<metadata.namespace.id>:mktp:itd:<metadata.name>`. This query parameter will make the server **ignore any other filtering query parameter**"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "visibility",
            "required": false,
            "description": "A comma-separated list of visibility values to filter by. Acceptable values are `console` (to target ITDs available to all tenants) and tenant IDs"
          }
        ],
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_all"
          }
        },
        "responses": {
          "200": {
            "description": "List of Item Type Definitions",
            "headers": {
              "x-total-items": {
                "schema": {
                  "type": "number"
                },
                "description": "Total number of items available"
              },
              "x-total-pages": {
                "schema": {
                  "type": "number"
                },
                "description": "Total number of pages available"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "List of Item Type Definitions",
                  "items": {
                    "$ref": "#/components/schemas/software-catalog-item-type-definition"
                  },
                  "type": "array"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      },
      "head": {
        "operationId": "softwareCatalogItemTypeDefinitionGetList-head",
        "summary": "Returns a list of all the Item Type Definitions the caller has permission to see",
        "tags": [
          "marketplace"
        ],
        "description": "Returns a paginated list of all the Item Type Definitions the caller has permission to see (i.e., the ones available to all tenants and the private ones of tenants the user has permission to see)",
        "parameters": [
          {
            "schema": {
              "default": 1,
              "minimum": 1,
              "type": "integer"
            },
            "in": "query",
            "name": "page",
            "required": false,
            "description": "Page number to be retrieved"
          },
          {
            "schema": {
              "default": 50,
              "maximum": 200,
              "minimum": 1,
              "type": "integer"
            },
            "in": "query",
            "name": "perPage",
            "required": false,
            "description": "Number of items per page"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "displayName",
            "required": false,
            "description": "A comma-separated list of case-sensitive display names to filter by"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "labels",
            "required": false,
            "description": "A comma-separated list of Kubernetes-like [equality-based selectors](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#equality-based-requirement)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "maintainers",
            "required": false,
            "description": "A comma-separated list of case-sensitive maintainer names to filter by"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "required": false,
            "description": "A comma-separated list of names to filter by"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "namespace",
            "required": false,
            "description": "A comma-separated list of namespace IDs to filter by"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "publisher",
            "required": false,
            "description": "A comma-separated list of case-sensitive publisher names to filter by"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "required": false,
            "description": "A string value used to perform a case-insensitive fuzzy regex search on the `metadata.name`, `metadata.displayName`, and `metadata.publisher.name` fields"
          },
          {
            "schema": {
              "pattern": "^(-?)(?:name|displayName|publisher)(?:,(-?)(?:name|displayName|publisher))*$",
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "required": false,
            "description": "A comma-separated list of fields for which the results should be sorted. Possible values are `name`, `displayName`, `publisher`. Default sort is ascending, for descending order add a \"-\" before the field"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "urn",
            "required": false,
            "description": "A comma-separated list of URNs used to fetch a specific Item Type Definition, where the URN pattern is `urn:<metadata.namespace.id>:mktp:itd:<metadata.name>`. This query parameter will make the server **ignore any other filtering query parameter**"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "visibility",
            "required": false,
            "description": "A comma-separated list of visibility values to filter by. Acceptable values are `console` (to target ITDs available to all tenants) and tenant IDs"
          }
        ],
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_all"
          }
        },
        "responses": {
          "200": {
            "description": "List of Item Type Definitions",
            "headers": {
              "x-total-items": {
                "schema": {
                  "type": "number"
                },
                "description": "Total number of items available"
              },
              "x-total-pages": {
                "schema": {
                  "type": "number"
                },
                "description": "Total number of pages available"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "List of Item Type Definitions",
                  "items": {
                    "$ref": "#/components/schemas/software-catalog-item-type-definition"
                  },
                  "type": "array"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}/marketplace/item-type-definitions": {
      "put": {
        "operationId": "softwareCatalogItemTypeDefinitionUpsertOne",
        "summary": "Creates a new definition, or replaces an existing one",
        "tags": [
          "marketplace"
        ],
        "description": "Creates or replaces an Item Type Definition. The match is tried against the resource compound primary key composed by `metadata.namespace.id` and `metadata.name`",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/software-catalog-item-type-definition"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "tenantId",
            "required": true,
            "description": "ID of the tenant namespace of the Item Type Definition to create or replace (it will be matched against `body.metadata.namespace.id`)"
          }
        ],
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_upsert_marketplace_item_type_definition",
            "preventBodyLoad": true
          }
        },
        "responses": {
          "200": {
            "description": "Item Type Definition edited",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Item Type Definition edited",
                  "$ref": "#/components/schemas/software-catalog-item-type-definition"
                }
              }
            }
          },
          "201": {
            "description": "Item Type Definition created",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Item Type Definition created",
                  "$ref": "#/components/schemas/software-catalog-item-type-definition"
                }
              }
            }
          },
          "409": {
            "description": "Conflict between the `__v` passed in body and the one of the remote resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Conflict between the `__v` passed in body and the one of the remote resource"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}/marketplace/item-type-definitions/{name}": {
      "get": {
        "operationId": "softwareCatalogItemTypeDefinitionGetOne",
        "summary": "Returns an Item Type Definition given its name, and tenant namespace",
        "tags": [
          "marketplace"
        ],
        "description": "Retrieves a specific Item Type Definition identified by its compound primary key as path parameters (i.e., id of the tenant namespace, and name of the definition)",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "name",
            "required": true,
            "description": "Name of the Item Type Definition to retrieve (it will be matched against `metadata.name`)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "tenantId",
            "required": true,
            "description": "ID of the tenant namespace of the Item Type Definition to retrieve (it will be matched against `metadata.namespace.id`)"
          }
        ],
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_all"
          }
        },
        "responses": {
          "200": {
            "description": "Item Type Definition",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/software-catalog-item-type-definition",
                  "description": "Item Type Definition"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      },
      "head": {
        "operationId": "softwareCatalogItemTypeDefinitionGetOne-head",
        "summary": "Returns an Item Type Definition given its name, and tenant namespace",
        "tags": [
          "marketplace"
        ],
        "description": "Retrieves a specific Item Type Definition identified by its compound primary key as path parameters (i.e., id of the tenant namespace, and name of the definition)",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "name",
            "required": true,
            "description": "Name of the Item Type Definition to retrieve (it will be matched against `metadata.name`)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "tenantId",
            "required": true,
            "description": "ID of the tenant namespace of the Item Type Definition to retrieve (it will be matched against `metadata.namespace.id`)"
          }
        ],
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_all"
          }
        },
        "responses": {
          "200": {
            "description": "Item Type Definition",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/software-catalog-item-type-definition",
                  "description": "Item Type Definition"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "softwareCatalogItemTypeDefinitionsDeleteOne",
        "summary": "Deletes an Item Type Definition given its name, and tenant namespace",
        "tags": [
          "marketplace"
        ],
        "description": "Deletes a specific Item Type Definition identified by its compound primary key as path parameters (i.e., id of the tenant namespace, and name of the definition)",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "name",
            "required": true,
            "description": "Name of the Item Type Definition to delete (it will be matched against `metadata.name`)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "tenantId",
            "required": true,
            "description": "ID of the tenant namespace of the Item Type Definition to delete (it will be matched against `metadata.namespace.id`)"
          }
        ],
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_delete_marketplace_item_type_definition",
            "preventBodyLoad": true
          }
        },
        "responses": {
          "204": {
            "description": "Default Response"
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      }
    },
    "/api/marketplace": {
      "get": {
        "operationId": "marketplaceGetItemsList",
        "summary": "Returns the list of available Marketplace items",
        "tags": [
          "marketplace"
        ],
        "description": "Returns the list of available Marketplace items",
        "parameters": [
          {
            "schema": {
              "default": 1,
              "minimum": 1,
              "type": "integer"
            },
            "in": "query",
            "name": "page",
            "required": false,
            "description": "Page number to be retrieved"
          },
          {
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "default": 50
            },
            "in": "query",
            "name": "perPage",
            "required": false,
            "description": "Number of items per page"
          },
          {
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "default": 50
            },
            "in": "query",
            "name": "per_page",
            "required": false,
            "description": "Number of items per page. **Deprecated in favor of `perPage`**"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "availableTo",
            "required": false,
            "description": "A comma-separated string of possible item visibilities: \"public\", \"all-tenants\", \"private\". It is mutually exclusive with \"includeTenantId\""
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "category",
            "required": false,
            "description": "A comma-separated string of possible item categories"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "includeTenantId",
            "required": false,
            "description": "The Id of the Tenant for which to return both the public and private marketplace resources. It is mutually exclusive with \"availableTo\""
          },
          {
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "in": "query",
            "name": "itemUrns",
            "required": false,
            "description": "List of item URNs used to fetch only specific items, where the URN pattern is `urn:<<tenantId>>:mktp:<<itemId>>`, or `urn:<<tenantId>>:mktp:<<itemId>>?=version=<<version>>`. Each list element should be passed on a different query param (ie. itemUrns=urn1&itemUrns=urn2)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lifecycleStatus",
            "required": false,
            "description": "A comma-separated string of possible item release stages: \"coming-soon\", \"draft\", \"published\", \"maintenance\", \"deprecated\", \"archived\""
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "required": false,
            "description": "Regex for filtering items by name"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "publishOnMiaDocumentation",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "resolveResourcesData",
            "required": false,
            "description": "If true the returned items contain also the resources data as well as metadata"
          },
          {
            "schema": {
              "enum": [
                "name",
                "-name",
                "type",
                "-type",
                "category",
                "-category"
              ],
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "required": false,
            "description": "The field to which sort results. Default sort is ascending, for descending order add a \"-\" before the field (e.g. -name)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tenantId",
            "required": false,
            "description": "The Id of the Tenant for which to filter the marketplace resources"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "types",
            "required": false,
            "description": "A comma separated string of marketplace Item Type Definition references. Each value may be a full Item Type Definition URN (following the pattern `urn:<itd.metadata.namespace.id>:mktp:itd:<itd.metadata.name>`), or a just an Item Type Definition name (i.e., `itd.metadata.name`) which will be considered belonging to the Mia-Platform default namespace"
          }
        ],
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_all"
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "headers": {
              "x-total-items": {
                "schema": {
                  "type": "number"
                },
                "description": "Total number of items available"
              },
              "x-total-pages": {
                "schema": {
                  "type": "number"
                },
                "description": "Total number of pages available"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-item"
                  },
                  "type": "array"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      },
      "head": {
        "operationId": "marketplaceGetItemsList-head",
        "summary": "Returns the list of available Marketplace items",
        "tags": [
          "marketplace"
        ],
        "description": "Returns the list of available Marketplace items",
        "parameters": [
          {
            "schema": {
              "default": 1,
              "minimum": 1,
              "type": "integer"
            },
            "in": "query",
            "name": "page",
            "required": false,
            "description": "Page number to be retrieved"
          },
          {
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "default": 50
            },
            "in": "query",
            "name": "perPage",
            "required": false,
            "description": "Number of items per page"
          },
          {
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "default": 50
            },
            "in": "query",
            "name": "per_page",
            "required": false,
            "description": "Number of items per page. **Deprecated in favor of `perPage`**"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "availableTo",
            "required": false,
            "description": "A comma-separated string of possible item visibilities: \"public\", \"all-tenants\", \"private\". It is mutually exclusive with \"includeTenantId\""
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "category",
            "required": false,
            "description": "A comma-separated string of possible item categories"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "includeTenantId",
            "required": false,
            "description": "The Id of the Tenant for which to return both the public and private marketplace resources. It is mutually exclusive with \"availableTo\""
          },
          {
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "in": "query",
            "name": "itemUrns",
            "required": false,
            "description": "List of item URNs used to fetch only specific items, where the URN pattern is `urn:<<tenantId>>:mktp:<<itemId>>`, or `urn:<<tenantId>>:mktp:<<itemId>>?=version=<<version>>`. Each list element should be passed on a different query param (ie. itemUrns=urn1&itemUrns=urn2)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lifecycleStatus",
            "required": false,
            "description": "A comma-separated string of possible item release stages: \"coming-soon\", \"draft\", \"published\", \"maintenance\", \"deprecated\", \"archived\""
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "required": false,
            "description": "Regex for filtering items by name"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "publishOnMiaDocumentation",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "resolveResourcesData",
            "required": false,
            "description": "If true the returned items contain also the resources data as well as metadata"
          },
          {
            "schema": {
              "enum": [
                "name",
                "-name",
                "type",
                "-type",
                "category",
                "-category"
              ],
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "required": false,
            "description": "The field to which sort results. Default sort is ascending, for descending order add a \"-\" before the field (e.g. -name)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tenantId",
            "required": false,
            "description": "The Id of the Tenant for which to filter the marketplace resources"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "types",
            "required": false,
            "description": "A comma separated string of marketplace Item Type Definition references. Each value may be a full Item Type Definition URN (following the pattern `urn:<itd.metadata.namespace.id>:mktp:itd:<itd.metadata.name>`), or a just an Item Type Definition name (i.e., `itd.metadata.name`) which will be considered belonging to the Mia-Platform default namespace"
          }
        ],
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_all"
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "headers": {
              "x-total-items": {
                "schema": {
                  "type": "number"
                },
                "description": "Total number of items available"
              },
              "x-total-pages": {
                "schema": {
                  "type": "number"
                },
                "description": "Total number of pages available"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-item"
                  },
                  "type": "array"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      }
    },
    "/api/marketplace/bff/items": {
      "get": {
        "operationId": "marketplaceGetBffItemsList",
        "summary": "Returns the list of available Marketplace items formatted for the software catalog frontend. This endpoint is not meant to be used in other ways.",
        "tags": [
          "marketplace"
        ],
        "description": "Returns the list of available Marketplace items formatted for the software catalog frontend. This endpoint is not meant to be used in other ways.",
        "parameters": [
          {
            "schema": {
              "default": 1,
              "minimum": 1,
              "type": "integer"
            },
            "in": "query",
            "name": "page",
            "required": false,
            "description": "Page number to be retrieved"
          },
          {
            "schema": {
              "default": 50,
              "maximum": 200,
              "minimum": 1,
              "type": "integer"
            },
            "in": "query",
            "name": "perPage",
            "required": false,
            "description": "Number of items per page"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "availableTo",
            "required": false,
            "description": "A comma-separated string of possible item visibilities: \"public\", \"all-tenants\", \"private\". It is mutually exclusive with \"includeTenantId\""
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "includeTenantId",
            "required": false,
            "description": "The Id of the Tenant for which to return both the public and private marketplace resources. It is mutually exclusive with \"availableTo\""
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lifecycleStatus",
            "required": false,
            "description": "A comma-separated string of possible item release stages: \"coming-soon\", \"draft\", \"published\", \"maintenance\", \"deprecated\", \"archived\""
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "required": false,
            "description": "Regex for filtering items by name"
          },
          {
            "schema": {
              "enum": [
                "name",
                "-name",
                "type",
                "-type",
                "category",
                "-category"
              ],
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "required": false,
            "description": "The field to which sort results. Default sort is ascending, for descending order add a \"-\" before the field (e.g. -name)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tenantId",
            "required": false,
            "description": "The Id of the Tenant for which to filter the marketplace resources"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "types",
            "required": false,
            "description": "A comma separated string of marketplace Item Type Definition references. Each value may be a full Item Type Definition URN (following the pattern `urn:<itd.metadata.namespace.id>:mktp:itd:<itd.metadata.name>`)."
          }
        ],
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_all"
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "headers": {
              "x-total-items": {
                "schema": {
                  "type": "number"
                },
                "description": "Total number of items available"
              },
              "x-total-pages": {
                "schema": {
                  "type": "number"
                },
                "description": "Total number of pages available"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "properties": {
                      "_id": {
                        "type": "string"
                      },
                      "itemId": {
                        "type": "string"
                      },
                      "itemTypeDefinition": {
                        "anyOf": [
                          {
                            "type": "null"
                          },
                          {
                            "properties": {
                              "displayName": {
                                "type": "string"
                              },
                              "isVersioningSupported": {
                                "type": "boolean"
                              },
                              "name": {
                                "type": "string"
                              },
                              "publisher": {
                                "properties": {
                                  "image": {
                                    "properties": {
                                      "base64Data": {
                                        "type": "string"
                                      },
                                      "mediaType": {
                                        "enum": [
                                          "image/png",
                                          "image/svg+xml"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "base64Data",
                                      "mediaType"
                                    ],
                                    "type": "object"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "type": "object"
                              },
                              "urn": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "urn",
                              "isVersioningSupported"
                            ],
                            "type": "object"
                          }
                        ]
                      },
                      "lifecycleStatus": {
                        "description": "Lifecycle status of the item",
                        "enum": [
                          "coming-soon",
                          "draft",
                          "published",
                          "maintenance",
                          "deprecated",
                          "archived"
                        ],
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "tenantId": {
                        "type": "string"
                      },
                      "version": {
                        "description": "Version of the item following semver",
                        "properties": {
                          "name": {
                            "description": "Semantic version",
                            "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
                            "type": "string"
                          },
                          "releaseNote": {
                            "description": "Markdown release note",
                            "type": "string"
                          },
                          "security": {
                            "description": "Flag stating if the version addresses any vulnerability",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "name",
                          "releaseNote"
                        ],
                        "type": "object"
                      },
                      "visibility": {
                        "description": "Visibility of the item",
                        "properties": {
                          "allTenants": {
                            "default": false,
                            "description": "If true, the item will be accessible to all companies",
                            "type": "boolean"
                          },
                          "public": {
                            "default": false,
                            "description": "If true, the item will be accessible from any user that access the Console, even if not authenticated",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "required": [
                      "_id",
                      "itemId",
                      "lifecycleStatus",
                      "name",
                      "tenantId",
                      "itemTypeDefinition"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      },
      "head": {
        "operationId": "marketplaceGetBffItemsList-head",
        "summary": "Returns the list of available Marketplace items formatted for the software catalog frontend. This endpoint is not meant to be used in other ways.",
        "tags": [
          "marketplace"
        ],
        "description": "Returns the list of available Marketplace items formatted for the software catalog frontend. This endpoint is not meant to be used in other ways.",
        "parameters": [
          {
            "schema": {
              "default": 1,
              "minimum": 1,
              "type": "integer"
            },
            "in": "query",
            "name": "page",
            "required": false,
            "description": "Page number to be retrieved"
          },
          {
            "schema": {
              "default": 50,
              "maximum": 200,
              "minimum": 1,
              "type": "integer"
            },
            "in": "query",
            "name": "perPage",
            "required": false,
            "description": "Number of items per page"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "availableTo",
            "required": false,
            "description": "A comma-separated string of possible item visibilities: \"public\", \"all-tenants\", \"private\". It is mutually exclusive with \"includeTenantId\""
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "includeTenantId",
            "required": false,
            "description": "The Id of the Tenant for which to return both the public and private marketplace resources. It is mutually exclusive with \"availableTo\""
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lifecycleStatus",
            "required": false,
            "description": "A comma-separated string of possible item release stages: \"coming-soon\", \"draft\", \"published\", \"maintenance\", \"deprecated\", \"archived\""
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "required": false,
            "description": "Regex for filtering items by name"
          },
          {
            "schema": {
              "enum": [
                "name",
                "-name",
                "type",
                "-type",
                "category",
                "-category"
              ],
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "required": false,
            "description": "The field to which sort results. Default sort is ascending, for descending order add a \"-\" before the field (e.g. -name)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tenantId",
            "required": false,
            "description": "The Id of the Tenant for which to filter the marketplace resources"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "types",
            "required": false,
            "description": "A comma separated string of marketplace Item Type Definition references. Each value may be a full Item Type Definition URN (following the pattern `urn:<itd.metadata.namespace.id>:mktp:itd:<itd.metadata.name>`)."
          }
        ],
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_all"
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "headers": {
              "x-total-items": {
                "schema": {
                  "type": "number"
                },
                "description": "Total number of items available"
              },
              "x-total-pages": {
                "schema": {
                  "type": "number"
                },
                "description": "Total number of pages available"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "properties": {
                      "_id": {
                        "type": "string"
                      },
                      "itemId": {
                        "type": "string"
                      },
                      "itemTypeDefinition": {
                        "anyOf": [
                          {
                            "type": "null"
                          },
                          {
                            "properties": {
                              "displayName": {
                                "type": "string"
                              },
                              "isVersioningSupported": {
                                "type": "boolean"
                              },
                              "name": {
                                "type": "string"
                              },
                              "publisher": {
                                "properties": {
                                  "image": {
                                    "properties": {
                                      "base64Data": {
                                        "type": "string"
                                      },
                                      "mediaType": {
                                        "enum": [
                                          "image/png",
                                          "image/svg+xml"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "base64Data",
                                      "mediaType"
                                    ],
                                    "type": "object"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "type": "object"
                              },
                              "urn": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "urn",
                              "isVersioningSupported"
                            ],
                            "type": "object"
                          }
                        ]
                      },
                      "lifecycleStatus": {
                        "description": "Lifecycle status of the item",
                        "enum": [
                          "coming-soon",
                          "draft",
                          "published",
                          "maintenance",
                          "deprecated",
                          "archived"
                        ],
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "tenantId": {
                        "type": "string"
                      },
                      "version": {
                        "description": "Version of the item following semver",
                        "properties": {
                          "name": {
                            "description": "Semantic version",
                            "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
                            "type": "string"
                          },
                          "releaseNote": {
                            "description": "Markdown release note",
                            "type": "string"
                          },
                          "security": {
                            "description": "Flag stating if the version addresses any vulnerability",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "name",
                          "releaseNote"
                        ],
                        "type": "object"
                      },
                      "visibility": {
                        "description": "Visibility of the item",
                        "properties": {
                          "allTenants": {
                            "default": false,
                            "description": "If true, the item will be accessible to all companies",
                            "type": "boolean"
                          },
                          "public": {
                            "default": false,
                            "description": "If true, the item will be accessible from any user that access the Console, even if not authenticated",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "required": [
                      "_id",
                      "itemId",
                      "lifecycleStatus",
                      "name",
                      "tenantId",
                      "itemTypeDefinition"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      }
    },
    "/api/marketplace/custom-resource-definitions": {
      "get": {
        "operationId": "marketplaceGetCustomResourceDefinitionsList",
        "summary": "Returns the list of available Marketplace Custom Resource Definitions",
        "tags": [
          "marketplace"
        ],
        "description": "Returns the list of available Marketplace Custom Resource Definitions",
        "parameters": [
          {
            "schema": {
              "default": 1,
              "minimum": 1,
              "type": "integer"
            },
            "in": "query",
            "name": "page",
            "required": false,
            "description": "Page number to be retrieved"
          },
          {
            "schema": {
              "default": 50,
              "maximum": 200,
              "minimum": 1,
              "type": "integer"
            },
            "in": "query",
            "name": "perPage",
            "required": false,
            "description": "Number of items per page"
          }
        ],
        "deprecated": true,
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_all"
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "headers": {
              "x-total-items": {
                "schema": {
                  "type": "number"
                },
                "description": "Total number of items available"
              },
              "x-total-pages": {
                "schema": {
                  "type": "number"
                },
                "description": "Total number of pages available"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-crd"
                  },
                  "type": "array"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      },
      "head": {
        "operationId": "marketplaceGetCustomResourceDefinitionsList-head",
        "summary": "Returns the list of available Marketplace Custom Resource Definitions",
        "tags": [
          "marketplace"
        ],
        "description": "Returns the list of available Marketplace Custom Resource Definitions",
        "parameters": [
          {
            "schema": {
              "default": 1,
              "minimum": 1,
              "type": "integer"
            },
            "in": "query",
            "name": "page",
            "required": false,
            "description": "Page number to be retrieved"
          },
          {
            "schema": {
              "default": 50,
              "maximum": 200,
              "minimum": 1,
              "type": "integer"
            },
            "in": "query",
            "name": "perPage",
            "required": false,
            "description": "Number of items per page"
          }
        ],
        "deprecated": true,
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_all"
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "headers": {
              "x-total-items": {
                "schema": {
                  "type": "number"
                },
                "description": "Total number of items available"
              },
              "x-total-pages": {
                "schema": {
                  "type": "number"
                },
                "description": "Total number of pages available"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-crd"
                  },
                  "type": "array"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}/marketplace/items": {
      "post": {
        "operationId": "marketplaceApplyItems",
        "summary": "Upsert multiple Marketplace items",
        "tags": [
          "marketplace"
        ],
        "description": "Upsert multiple Marketplace items",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "resources": {
                    "items": {
                      "$ref": "#/components/schemas/catalog-item-manifest"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "resources"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "tenantId",
            "required": true
          }
        ],
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_apply_marketplace_item",
            "preventBodyLoad": true
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "done": {
                      "type": "boolean"
                    },
                    "items": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "done": {
                            "type": "boolean"
                          },
                          "errors": {
                            "items": {
                              "additionalProperties": true,
                              "properties": {
                                "ajvError": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "instancePath": {
                                      "type": "string"
                                    },
                                    "keyword": {
                                      "type": "string"
                                    },
                                    "message": {
                                      "type": "string"
                                    },
                                    "params": {
                                      "additionalProperties": true,
                                      "type": "object"
                                    },
                                    "schemaPath": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "message": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "message"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "inserted": {
                            "type": "boolean"
                          },
                          "isLatest": {
                            "type": "boolean"
                          },
                          "isUsingVersion": {
                            "type": "boolean"
                          },
                          "itemId": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "updated": {
                            "type": "boolean"
                          },
                          "version": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "itemId",
                          "name",
                          "done",
                          "inserted",
                          "updated",
                          "errors"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "done",
                    "items"
                  ],
                  "type": "object"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}/marketplace/items/{itemId}/versions": {
      "get": {
        "operationId": "marketplaceGetItemVersions",
        "summary": "Returns the versions of a Marketplace item",
        "tags": [
          "marketplace"
        ],
        "description": "Returns the versions of a Marketplace item",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "itemId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "tenantId",
            "required": true
          }
        ],
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_all"
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-release"
                  },
                  "type": "array"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      },
      "head": {
        "operationId": "marketplaceGetItemVersions-head",
        "summary": "Returns the versions of a Marketplace item",
        "tags": [
          "marketplace"
        ],
        "description": "Returns the versions of a Marketplace item",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "itemId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "tenantId",
            "required": true
          }
        ],
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_all"
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-release"
                  },
                  "type": "array"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}/marketplace/items/{itemId}/versions/{version}": {
      "get": {
        "operationId": "marketplaceGetItemVersion",
        "summary": "Returns a specific version of a Marketplace item",
        "tags": [
          "marketplace"
        ],
        "description": "Returns a specific version of a Marketplace item",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "itemId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "tenantId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "version",
            "required": true
          }
        ],
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_all"
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-versioned-item"
                }
              },
              "application/json; as=manifest": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-item-manifest"
                }
              },
              "application/yaml; as=manifest": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-item-manifest"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      },
      "head": {
        "operationId": "marketplaceGetItemVersion-head",
        "summary": "Returns a specific version of a Marketplace item",
        "tags": [
          "marketplace"
        ],
        "description": "Returns a specific version of a Marketplace item",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "itemId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "tenantId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "version",
            "required": true
          }
        ],
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_all"
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-versioned-item"
                }
              },
              "application/json; as=manifest": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-item-manifest"
                }
              },
              "application/yaml; as=manifest": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-item-manifest"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "marketplaceDeleteItemVersion",
        "summary": "Deletes a specific version of a Marketplace item",
        "tags": [
          "marketplace"
        ],
        "description": "Deletes a specific version of a Marketplace item",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "itemId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "tenantId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "version",
            "required": true
          }
        ],
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_delete_marketplace_item",
            "preventBodyLoad": true
          }
        },
        "responses": {
          "204": {
            "description": "Default Response",
            "headers": {
              "X-Marketplace-Item-Latest-Version": {
                "schema": {
                  "type": "string"
                },
                "description": "URN of the new latest version"
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}/marketplace/items/{itemId}/versions/{version}/metadata": {
      "patch": {
        "operationId": "marketplacePatchItemVersionMetadata",
        "summary": "Patches the metadata of a specific version of a Marketplace item",
        "tags": [
          "marketplace"
        ],
        "description": "Patches the metadata of a specific version of a Marketplace item",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "$set": {
                    "additionalProperties": false,
                    "properties": {
                      "categoryId": {
                        "description": "Identifier of the item's category",
                        "type": "string"
                      },
                      "description": {
                        "description": "Brief description of the item",
                        "type": "string"
                      },
                      "documentation": {
                        "description": "Documentation of the item",
                        "properties": {
                          "type": {
                            "enum": [
                              "externalLink",
                              "markdown"
                            ],
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "url"
                        ],
                        "type": "object"
                      },
                      "imageUrl": {
                        "description": "Url of the image associated with the item",
                        "type": "string"
                      },
                      "lifecycleStatus": {
                        "description": "Lifecycle status of the item",
                        "enum": [
                          "coming-soon",
                          "draft",
                          "published",
                          "maintenance",
                          "deprecated",
                          "archived"
                        ],
                        "type": "string"
                      },
                      "name": {
                        "description": "Human-readable name of the item",
                        "minLength": 1,
                        "type": "string"
                      },
                      "providerId": {
                        "description": "Identifier of the provider used to retrieve markdown documentation content and external resources, if supported by the item type",
                        "type": "string"
                      },
                      "publishOnMiaDocumentation": {
                        "description": "Flag stating if the resource documentation should be published on Mia-Platform public documentation",
                        "type": "boolean"
                      },
                      "releaseDate": {
                        "description": "Creation date of this item's release",
                        "format": "date-time",
                        "type": "string"
                      },
                      "repositoryUrl": {
                        "description": "URL of the repository containing the source code of the resource created by the item",
                        "type": "string"
                      },
                      "supportedBy": {
                        "description": "Identifier of the company that has produced the item",
                        "type": "string"
                      },
                      "supportedByImageUrl": {
                        "description": "Url of the image associated with the company that has produced the item",
                        "type": "string"
                      },
                      "version": {
                        "additionalProperties": false,
                        "properties": {
                          "releaseNote": {
                            "description": "Markdown release note",
                            "type": "string"
                          }
                        },
                        "required": [
                          "releaseNote"
                        ],
                        "type": "object"
                      },
                      "visibility": {
                        "description": "Visibility of the item",
                        "properties": {
                          "allTenants": {
                            "default": false,
                            "description": "If true, the item will be accessible to all companies",
                            "type": "boolean"
                          },
                          "public": {
                            "default": false,
                            "description": "If true, the item will be accessible from any user that access the Console, even if not authenticated",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "$unset": {
                    "additionalProperties": false,
                    "properties": {
                      "categoryId": {
                        "enum": [
                          true
                        ]
                      },
                      "description": {
                        "enum": [
                          true
                        ]
                      },
                      "documentation": {
                        "enum": [
                          true
                        ]
                      },
                      "imageUrl": {
                        "enum": [
                          true
                        ]
                      },
                      "providerId": {
                        "enum": [
                          true
                        ]
                      },
                      "publishOnMiaDocumentation": {
                        "enum": [
                          true
                        ]
                      },
                      "repositoryUrl": {
                        "enum": [
                          true
                        ]
                      },
                      "supportedBy": {
                        "enum": [
                          true
                        ]
                      },
                      "supportedByImageUrl": {
                        "enum": [
                          true
                        ]
                      },
                      "visibility": {
                        "enum": [
                          true
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "itemId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "tenantId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "version",
            "required": true
          }
        ],
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_apply_marketplace_item",
            "preventBodyLoad": true
          }
        },
        "responses": {
          "200": {
            "description": "Data model of a Catalog item with required version",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-versioned-item"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      }
    },
    "/api/marketplace/categories": {
      "get": {
        "operationId": "marketplaceGetCategories",
        "summary": "Returns the list of available Marketplace categories",
        "tags": [
          "marketplace"
        ],
        "description": "Returns the list of available Marketplace categories",
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_all"
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-category"
                  },
                  "type": "array"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      },
      "head": {
        "operationId": "marketplaceGetCategories-head",
        "summary": "Returns the list of available Marketplace categories",
        "tags": [
          "marketplace"
        ],
        "description": "Returns the list of available Marketplace categories",
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_all"
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-category"
                  },
                  "type": "array"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantId}/marketplace/files": {
      "post": {
        "operationId": "marketplaceUploadFile",
        "summary": "Uploads a Marketplace-related file",
        "tags": [
          "marketplace"
        ],
        "description": "Uploads a Marketplace-related file",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "tenantId",
            "required": true
          },
          {
            "schema": {
              "pattern": "^multipart/form-data",
              "type": "string"
            },
            "in": "header",
            "name": "content-type",
            "required": false
          }
        ],
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_upload_marketplace_file",
            "preventBodyLoad": true
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "file": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "size": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "_id",
                    "name",
                    "file",
                    "size",
                    "location"
                  ],
                  "type": "object"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      }
    },
    "/api/backend/marketplace": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "description": "Returns the list of available Marketplace items",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "includeTenantId",
            "required": false,
            "description": "The Id of the Tenant for which to return both the public and private marketplace resources"
          },
          {
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "in": "query",
            "name": "itemUrns",
            "required": false,
            "description": "List of item URNs used to fetch only specific items, where the URN pattern is `urn:<<tenantId>>:mktp:<<itemId>>`, or `urn:<<tenantId>>:mktp:<<itemId>>?=version=<<version>>`. Each list element should be passed on a different query param (ie. itemUrns=urn1&itemUrns=urn2)"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "perPage",
            "required": false,
            "description": "Size of the page to be downloaded"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "publishOnMiaDocumentation",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "resolveResourcesData",
            "required": false,
            "description": "If true the returned items contain also the resources data as well as metadata"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tenantId",
            "required": false,
            "description": "The Id of the Tenant for which to filter the marketplace resources"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "types",
            "required": false,
            "description": "A comma separated string of marketplace types (e.g.: plugin,template,example,application)"
          }
        ],
        "deprecated": true,
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_all"
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/legacy-catalog-item"
                  },
                  "type": "array"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "marketplace"
        ],
        "description": "Returns the list of available Marketplace items",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "includeTenantId",
            "required": false,
            "description": "The Id of the Tenant for which to return both the public and private marketplace resources"
          },
          {
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "in": "query",
            "name": "itemUrns",
            "required": false,
            "description": "List of item URNs used to fetch only specific items, where the URN pattern is `urn:<<tenantId>>:mktp:<<itemId>>`, or `urn:<<tenantId>>:mktp:<<itemId>>?=version=<<version>>`. Each list element should be passed on a different query param (ie. itemUrns=urn1&itemUrns=urn2)"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "perPage",
            "required": false,
            "description": "Size of the page to be downloaded"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "publishOnMiaDocumentation",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "resolveResourcesData",
            "required": false,
            "description": "If true the returned items contain also the resources data as well as metadata"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tenantId",
            "required": false,
            "description": "The Id of the Tenant for which to filter the marketplace resources"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "types",
            "required": false,
            "description": "A comma separated string of marketplace types (e.g.: plugin,template,example,application)"
          }
        ],
        "deprecated": true,
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_all"
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/legacy-catalog-item"
                  },
                  "type": "array"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      }
    },
    "/api/backend/marketplace/{uuid}": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "description": "Returns details of a specific Marketplace item given its database uuid",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uuid",
            "required": true
          }
        ],
        "deprecated": true,
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_all"
          }
        },
        "responses": {
          "200": {
            "description": "Data model of a Catalog item with required version",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/legacy-catalog-versioned-item"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "marketplace"
        ],
        "description": "Returns details of a specific Marketplace item given its database uuid",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uuid",
            "required": true
          }
        ],
        "deprecated": true,
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_all"
          }
        },
        "responses": {
          "200": {
            "description": "Data model of a Catalog item with required version",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/legacy-catalog-versioned-item"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      }
    },
    "/api/backend/marketplace/tenants/{tenantId}/resources": {
      "post": {
        "tags": [
          "marketplace"
        ],
        "description": "Apply items to the marketplace",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "resources": {
                    "items": {
                      "$ref": "#/components/schemas/legacy-catalog-item-manifest"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "resources"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "tenantId",
            "required": true
          }
        ],
        "deprecated": true,
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_apply_marketplace_item",
            "preventBodyLoad": true
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "done": {
                      "type": "boolean"
                    },
                    "items": {
                      "items": {
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "done": {
                            "type": "boolean"
                          },
                          "errors": {
                            "items": {
                              "additionalProperties": true,
                              "properties": {
                                "ajvError": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "instancePath": {
                                      "type": "string"
                                    },
                                    "keyword": {
                                      "type": "string"
                                    },
                                    "message": {
                                      "type": "string"
                                    },
                                    "params": {
                                      "additionalProperties": true,
                                      "type": "object"
                                    },
                                    "schemaPath": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "message": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "message"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "inserted": {
                            "type": "boolean"
                          },
                          "isLatest": {
                            "type": "boolean"
                          },
                          "isUsingVersion": {
                            "type": "boolean"
                          },
                          "itemId": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "updated": {
                            "type": "boolean"
                          },
                          "validationErrors": {
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "instancePath": {
                                  "type": "string"
                                },
                                "keyword": {
                                  "type": "string"
                                },
                                "message": {
                                  "type": "string"
                                },
                                "params": {
                                  "additionalProperties": true,
                                  "type": "object"
                                },
                                "schemaPath": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "itemId",
                          "name",
                          "done",
                          "inserted",
                          "updated",
                          "validationErrors",
                          "errors"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "done",
                    "items"
                  ],
                  "type": "object"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      }
    },
    "/api/backend/marketplace/tenants/{tenantId}/resources/{uuid}": {
      "delete": {
        "tags": [
          "marketplace"
        ],
        "description": "Deletes a specific Marketplace item given its database uuid",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "tenantId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uuid",
            "required": true
          }
        ],
        "deprecated": true,
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_delete_marketplace_item",
            "preventBodyLoad": true
          }
        },
        "responses": {
          "204": {
            "description": "Default Response"
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      }
    },
    "/api/backend/marketplace/tenants/{tenantId}/resources/{itemId}/versions": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "description": "Returns the list of a Marketplace item versions",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "itemId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "tenantId",
            "required": true
          }
        ],
        "deprecated": true,
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_all"
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/legacy-catalog-release"
                  },
                  "type": "array"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "marketplace"
        ],
        "description": "Returns the list of a Marketplace item versions",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "itemId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "tenantId",
            "required": true
          }
        ],
        "deprecated": true,
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_all"
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/legacy-catalog-release"
                  },
                  "type": "array"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      }
    },
    "/api/backend/marketplace/tenants/{tenantId}/resources/{itemId}/versions/{version}": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "description": "Returns details of a specific Marketplace item version",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "itemId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "tenantId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "version",
            "required": true
          }
        ],
        "deprecated": true,
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_all"
          }
        },
        "responses": {
          "200": {
            "description": "Data model of a Catalog item with required version",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/legacy-catalog-versioned-item"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "marketplace"
        ],
        "description": "Returns details of a specific Marketplace item version",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "itemId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "tenantId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "version",
            "required": true
          }
        ],
        "deprecated": true,
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_all"
          }
        },
        "responses": {
          "200": {
            "description": "Data model of a Catalog item with required version",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/legacy-catalog-versioned-item"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "marketplace"
        ],
        "description": "Deletes a specific Marketplace item version",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "itemId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "tenantId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "version",
            "required": true
          }
        ],
        "deprecated": true,
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_delete_marketplace_item",
            "preventBodyLoad": true
          }
        },
        "responses": {
          "204": {
            "description": "Default Response",
            "headers": {
              "X-Marketplace-Item-Latest-Version": {
                "schema": {
                  "type": "string"
                },
                "description": "URN of the new latest version"
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      }
    },
    "/api/backend/marketplace/categories": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "description": "Returns the list of available Marketplace categories",
        "deprecated": true,
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_all"
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-category"
                  },
                  "type": "array"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "marketplace"
        ],
        "description": "Returns the list of available Marketplace categories",
        "deprecated": true,
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_all"
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/catalog-category"
                  },
                  "type": "array"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      }
    },
    "/api/backend/marketplace/tenants/{tenantId}/files": {
      "post": {
        "tags": [
          "marketplace"
        ],
        "description": "Upload a file to the marketplace",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "tenantId",
            "required": true
          },
          {
            "schema": {
              "pattern": "^multipart/form-data",
              "type": "string"
            },
            "in": "header",
            "name": "content-type",
            "required": false
          }
        ],
        "deprecated": true,
        "x-rond": {
          "options": {
            "ignoreTrailingSlash": true
          },
          "requestFlow": {
            "policyName": "allow_upload_marketplace_file",
            "preventBodyLoad": true
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "file": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "size": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "_id",
                    "name",
                    "file",
                    "size",
                    "location"
                  ],
                  "type": "object"
                }
              }
            }
          },
          "4XX": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Client error"
                }
              }
            }
          },
          "5XX": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/http-error",
                  "description": "Server error"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "description": "Marketplace APIs",
      "name": "marketplace"
    }
  ]
}
