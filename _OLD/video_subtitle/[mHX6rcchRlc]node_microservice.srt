1
00:00:03,200 --> 00:00:08,120
Hi everyone, this is Rhea from Mia-Platform 
and today I'm going to show you how you can  

2
00:00:08,120 --> 00:00:14,000
create a node.js microservice in the Mia-Platform 
Console. To begin with, we're in the Mia-Platform  

3
00:00:14,000 --> 00:00:20,200
Console, in the design section - let's go ahead and 
click on "Create a microservice" from Marketplace.

4
00:00:20,200 --> 00:00:25,200
The Mia-Platform Marketplace is a repository of 
microservices that are easily available for your  

5
00:00:25,200 --> 00:00:29,028
use. For this example, let's just go ahead and look 
up node.js. We're going going to be using the

6
00:00:29,061 --> 00:00:36,680
"Node.js HelloWorld Microservice Example" here. Let's start 
by giving it a name: for this example I'm going to  

7
00:00:36,680 --> 00:00:41,400
give it the name "books.3". Here, you can see, you 
can change the description and also the docker  

8
00:00:41,400 --> 00:00:48,000
image name. Let's go ahead and click on "Create" and 
continue. Within a couple of moments, your

9
00:00:48,000 --> 00:00:53,960
microservice is going to be created, Perfect, as you 
can see the microservice is created. Now let's go  

10
00:00:53,960 --> 00:01:00,640
ahead and expose the endpoint. Let's move into the 
endpoint section over here, where we will create a  

11
00:01:00,640 --> 00:01:06,640
new endpoint. Let's give it a base path name: again, 
let's go with "books.3" and then we can select  

12
00:01:06,640 --> 00:01:11,880
the type. The type of course is microservice 
and here you can select the exact microservice,

13
00:01:11,880 --> 00:01:17,120
the one we just created which is example books.3.
Once you're happy with this, go ahead and click on  

14
00:01:17,120 --> 00:01:23,200
"create". As you can see, here you can also change the 
security settings and documentation settings of  

15
00:01:23,200 --> 00:01:29,200
the endpoint. Once your endpoint has been created 
and exposed, it's time to save your local changes. 

16
00:01:29,200 --> 00:01:35,560
So let's go over here to the left hand side menu 
and click on "Save configuration". While saving the  

17
00:01:35,560 --> 00:01:41,440
configuration, you have to write a title commit: for 
this example, let's go ahead and write "commit books.3".

18
00:01:41,440 --> 00:01:48,960
 Perfect, once you're happy with that go ahead 
and save that. Now your configuration is being  

19
00:01:48,960 --> 00:01:55,280
saved and loaded. Perfect, everything is up to date 
now and we just need to move to the deploy section.

20
00:01:55,280 --> 00:02:02,400
Let's go ahead here to deploy. Perfect, as you can 
see here we've entered the branch master and you can  

21
00:02:02,400 --> 00:02:08,320
see that our latest microservice which is "books.3" has been built successfully. Once you happy with  

22
00:02:08,320 --> 00:02:14,000
this, let's go ahead and click on "Smart deploy". This 
just takes a couple of moments to deploy Master on

23
00:02:14,000 --> 00:02:23,840
development. Perfect, our deploy has been successful! Let's move on to the next step which is to run  

24
00:02:23,840 --> 00:02:29,080
this. Let's move into the Runtime section, where you 
can see each of the pods have a status. Currently  

25
00:02:29,080 --> 00:02:33,760
the status is okay for only three of them, but we 
need it to be okay for all of them, so let's just  

26
00:02:33,760 --> 00:02:39,520
give it a couple of seconds before we can go ahead 
and auto refresh this. Perfect, as you can see all  

27
00:02:39,520 --> 00:02:43,760
of the pods are ready now and now we just need 
to move into the overview section on the left  

28
00:02:43,760 --> 00:02:50,080
hand side. Let's move into the overview section 
and go into environments, and here we will enter  

29
00:02:50,080 --> 00:02:58,400
the runtime environments for the development. 
Perfect, let's go ahead to documentation - this  

30
00:02:58,400 --> 00:03:04,960
is going to open the API portal for us. Perfect, as 
you can see this has opened the API portal where  

31
00:03:04,960 --> 00:03:10,200
we have our "get" function for our microservice 
books.3. Let's click on the "get" function and  

32
00:03:10,200 --> 00:03:15,440
over here you can try it. Let's click on "Try 
it". Perfect, as you can see our microservices  

33
00:03:15,440 --> 00:03:21,000
hasn't been installed, our endpoint has been 
exposed and here is the output "hello world". If you  

34
00:03:21,000 --> 00:03:25,960
have any questions feel free to reach out to us 
for a demo or send us an email - and thank you for

35
00:03:25,960 --> 00:03:29,760
watching!